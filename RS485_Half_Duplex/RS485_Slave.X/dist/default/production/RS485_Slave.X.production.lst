

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 17:58:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataBANK0
    75  00154E                     __pidataBANK0:
    76                           	callstack 0
    77                           
    78                           ;initializer for _bit_flag
    79  00154E  0001               	dw	1
    80  0000                     _PORTB	set	3969
    81  0000                     _LATCbits	set	3979
    82  0000                     _LATD	set	3980
    83  0000                     _TRISDbits	set	3989
    84  0000                     _TRISB	set	3987
    85  0000                     _ADCON1bits	set	4033
    86  0000                     _RCREG	set	4014
    87  0000                     _RCSTAbits	set	4011
    88  0000                     _TXREG	set	4013
    89  0000                     _TXSTAbits	set	4012
    90  0000                     _PIR1bits	set	3998
    91  0000                     _SPBRGH	set	4016
    92  0000                     _SPBRG	set	4015
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _BAUDCON	set	4024
    95  0000                     _RCSTA	set	4011
    96  0000                     _TXSTA	set	4012
    97  0000                     _TRISCbits	set	3988
    98                           
    99                           	psect	smallconst
   100  000800                     __psmallconst:
   101                           	callstack 0
   102  000800  00                 	db	0
   103  000801                     STR_1:
   104  000801  25                 	db	37
   105  000802  75                 	db	117	;'u'
   106  000803  0D                 	db	13
   107  000804  0A                 	db	10
   108  000805  00                 	db	0
   109  000806  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  0014BE                     __pcinit:
   115                           	callstack 0
   116  0014BE                     start_initialization:
   117                           	callstack 0
   118  0014BE                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Initialize objects allocated to BANK0 (2 bytes)
   122                           ; load TBLPTR registers with __pidataBANK0
   123  0014BE  0E4E               	movlw	low __pidataBANK0
   124  0014C0  6EF6               	movwf	tblptrl,c
   125  0014C2  0E15               	movlw	high __pidataBANK0
   126  0014C4  6EF7               	movwf	tblptrh,c
   127  0014C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   128  0014C8  6EF8               	movwf	tblptru,c
   129  0014CA  0009               	tblrd		*+	;fetch initializer
   130  0014CC  CFF5 F0A4          	movff	tablat,__pdataBANK0
   131  0014D0  0009               	tblrd		*+	;fetch initializer
   132  0014D2  CFF5 F0A5          	movff	tablat,__pdataBANK0+1
   133                           
   134                           ; Clear objects allocated to BANK0 (60 bytes)
   135  0014D6  EE00  F060         	lfsr	0,__pbssBANK0
   136  0014DA  0E3C               	movlw	60
   137  0014DC                     clear_0:
   138  0014DC  6AEE               	clrf	postinc0,c
   139  0014DE  06E8               	decf	wreg,f,c
   140  0014E0  E1FD               	bnz	clear_0
   141  0014E2                     end_of_initialization:
   142                           	callstack 0
   143  0014E2                     __end_of__initialization:
   144                           	callstack 0
   145  0014E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  0014E4  6EF8               	movwf	tblptru,c
   147  0014E6  0100               	movlb	0
   148  0014E8  EF0B  F007         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssBANK0
   151  000060                     __pbssBANK0:
   152                           	callstack 0
   153  000060                     _nout:
   154                           	callstack 0
   155  000060                     	ds	2
   156  000062                     _width:
   157                           	callstack 0
   158  000062                     	ds	2
   159  000064                     _prec:
   160                           	callstack 0
   161  000064                     	ds	2
   162  000066                     _flags:
   163                           	callstack 0
   164  000066                     	ds	2
   165  000068                     _dbuf:
   166                           	callstack 0
   167  000068                     	ds	32
   168  000088                     _buffer_tx:
   169                           	callstack 0
   170  000088                     	ds	10
   171  000092                     _buffer_rx:
   172                           	callstack 0
   173  000092                     	ds	10
   174                           
   175                           	psect	dataBANK0
   176  0000A4                     __pdataBANK0:
   177                           	callstack 0
   178  0000A4                     _bit_flag:
   179                           	callstack 0
   180  0000A4                     	ds	2
   181                           
   182                           	psect	cstackBANK0
   183  00009C                     __pcstackBANK0:
   184                           	callstack 0
   185  00009C                     sprintf@ap:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  00009C                     	ds	2
   190  00009E                     sprintf@f:
   191                           	callstack 0
   192                           
   193                           ; 6 bytes @ 0x2
   194  00009E                     	ds	6
   195                           
   196                           	psect	cstackCOMRAM
   197  000001                     __pcstackCOMRAM:
   198                           	callstack 0
   199  000001                     ?_isspace:
   200                           	callstack 0
   201  000001                     ?_isdigit:
   202                           	callstack 0
   203  000001                     ?_strlen:
   204                           	callstack 0
   205  000001                     ?___wmul:
   206                           	callstack 0
   207  000001                     ?___lldiv:
   208                           	callstack 0
   209  000001                     ?___lodiv:
   210                           	callstack 0
   211  000001                     ?___lomod:
   212                           	callstack 0
   213  000001                     Uart_Send_Char@txData:
   214                           	callstack 0
   215  000001                     Uart_Read_String@Buf:
   216                           	callstack 0
   217  000001                     ___wmul@multiplier:
   218                           	callstack 0
   219  000001                     isdigit@c:
   220                           	callstack 0
   221  000001                     isspace@c:
   222                           	callstack 0
   223  000001                     fputc@c:
   224                           	callstack 0
   225  000001                     strlen@s:
   226                           	callstack 0
   227  000001                     ___lldiv@dividend:
   228                           	callstack 0
   229  000001                     ___lodiv@dividend:
   230                           	callstack 0
   231  000001                     ___lomod@dividend:
   232                           	callstack 0
   233                           
   234                           ; 8 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     Uart_Send_String@info:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x1
   240  000002                     	ds	1
   241  000003                     ??_isspace:
   242  000003                     ??_isdigit:
   243  000003                     Uart_Read_String@s_buf:
   244                           	callstack 0
   245  000003                     ___wmul@multiplicand:
   246                           	callstack 0
   247  000003                     fputc@fp:
   248                           	callstack 0
   249  000003                     strlen@a:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  000003                     	ds	1
   254  000004                     
   255                           ; 1 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     ??_fputc:
   258  000005                     ??_Uart_Read_String:
   259  000005                     ___wmul@product:
   260                           	callstack 0
   261  000005                     ___lldiv@divisor:
   262                           	callstack 0
   263                           
   264                           ; 4 bytes @ 0x4
   265  000005                     	ds	2
   266  000007                     Uart_Read_String@c:
   267                           	callstack 0
   268  000007                     _isspace$962:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272  000007                     	ds	1
   273  000008                     ?_atoi:
   274                           	callstack 0
   275  000008                     Uart_Read_String@cont_buf:
   276                           	callstack 0
   277  000008                     atoi@s:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x7
   281  000008                     	ds	1
   282  000009                     ___lldiv@quotient:
   283                           	callstack 0
   284  000009                     ___lodiv@divisor:
   285                           	callstack 0
   286  000009                     ___lomod@divisor:
   287                           	callstack 0
   288                           
   289                           ; 8 bytes @ 0x8
   290  000009                     	ds	1
   291  00000A                     ??_atoi:
   292  00000A                     fputs@s:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x9
   296  00000A                     	ds	2
   297  00000C                     fputs@fp:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xB
   301  00000C                     	ds	1
   302  00000D                     ___lldiv@counter:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xC
   306  00000D                     	ds	1
   307  00000E                     fputs@c:
   308                           	callstack 0
   309  00000E                     atoi@neg:
   310                           	callstack 0
   311  00000E                     Uart_Init@baud:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0xD
   315  00000E                     	ds	1
   316  00000F                     fputs@i:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xE
   320  00000F                     	ds	1
   321  000010                     _atoi$944:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xF
   325  000010                     	ds	1
   326  000011                     ?_pad:
   327                           	callstack 0
   328  000011                     ___lomod@counter:
   329                           	callstack 0
   330  000011                     pad@fp:
   331                           	callstack 0
   332  000011                     ___lodiv@quotient:
   333                           	callstack 0
   334                           
   335                           ; 8 bytes @ 0x10
   336  000011                     	ds	1
   337  000012                     ??_Uart_Init:
   338  000012                     _atoi$946:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x11
   342  000012                     	ds	1
   343  000013                     pad@buf:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x12
   347  000013                     	ds	1
   348  000014                     _atoi$945:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x13
   352  000014                     	ds	1
   353  000015                     atoi@n:
   354                           	callstack 0
   355  000015                     pad@p:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x14
   359  000015                     	ds	1
   360  000016                     Uart_Init@vx:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x15
   364  000016                     	ds	1
   365  000017                     ??_pad:
   366                           
   367                           ; 1 bytes @ 0x16
   368  000017                     	ds	1
   369  000018                     pad@i:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x17
   373  000018                     	ds	1
   374  000019                     ___lodiv@counter:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x18
   378  000019                     	ds	1
   379  00001A                     pad@w:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x19
   383  00001A                     	ds	2
   384  00001C                     ?_utoa:
   385                           	callstack 0
   386  00001C                     utoa@fp:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x1B
   390  00001C                     	ds	2
   391  00001E                     utoa@d:
   392                           	callstack 0
   393                           
   394                           ; 8 bytes @ 0x1D
   395  00001E                     	ds	8
   396  000026                     ??_utoa:
   397                           
   398                           ; 1 bytes @ 0x25
   399  000026                     	ds	8
   400  00002E                     utoa@p:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x2D
   404  00002E                     	ds	2
   405  000030                     utoa@w:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x2F
   409  000030                     	ds	2
   410  000032                     utoa@n:
   411                           	callstack 0
   412                           
   413                           ; 8 bytes @ 0x31
   414  000032                     	ds	8
   415  00003A                     utoa@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x39
   419  00003A                     	ds	2
   420  00003C                     ?_vfpfcnvrt:
   421                           	callstack 0
   422  00003C                     vfpfcnvrt@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x3B
   426  00003C                     	ds	2
   427  00003E                     vfpfcnvrt@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x3D
   431  00003E                     	ds	2
   432  000040                     vfpfcnvrt@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x3F
   436  000040                     	ds	2
   437  000042                     ??_vfpfcnvrt:
   438                           
   439                           ; 1 bytes @ 0x41
   440  000042                     	ds	4
   441  000046                     vfpfcnvrt@llu:
   442                           	callstack 0
   443                           
   444                           ; 8 bytes @ 0x45
   445  000046                     	ds	8
   446  00004E                     ?_vfprintf:
   447                           	callstack 0
   448  00004E                     vfprintf@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4D
   452  00004E                     	ds	2
   453  000050                     vfprintf@fmt:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x4F
   457  000050                     	ds	2
   458  000052                     vfprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x51
   462  000052                     	ds	2
   463  000054                     vfprintf@cfmt:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x53
   467  000054                     	ds	2
   468  000056                     ?_sprintf:
   469                           	callstack 0
   470  000056                     sprintf@s:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x55
   474  000056                     	ds	2
   475  000058                     sprintf@fmt:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x57
   479  000058                     	ds	4
   480  00005C                     ??_main:
   481                           
   482                           ; 1 bytes @ 0x5B
   483  00005C                     	ds	1
   484  00005D                     main@dato_rx:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x5C
   488  00005D                     	ds	1
   489  00005E                     main@v_dato:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x5D
   493  00005E                     	ds	1
   494                           
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 30 in file "RS485_Slave.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  dato_rx         1   92[COMRAM] unsigned char 
   505 ;;  v_dato          1   93[COMRAM] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         0       0       0       0       0       0       0       0       0
   516 ;;      Locals:         2       0       0       0       0       0       0       0       0
   517 ;;      Temps:          1       0       0       0       0       0       0       0       0
   518 ;;      Totals:         3       0       0       0       0       0       0       0       0
   519 ;;Total ram usage:        3 bytes
   520 ;; Hardware stack levels required when called: 8
   521 ;; This function calls:
   522 ;;		_Uart_Init
   523 ;;		_Uart_Read_String
   524 ;;		_Uart_Send_String
   525 ;;		_atoi
   526 ;;		_sprintf
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533  000E16                     __ptext0:
   534                           	callstack 0
   535  000E16                     _main:
   536                           	callstack 23
   537  000E16                     
   538                           ;RS485_Slave.c: 32:     ADCON1bits.PCFG = 0x0F;
   539  000E16  0E0F               	movlw	15
   540  000E18  12C1               	iorwf	193,f,c	;volatile
   541  000E1A                     
   542                           ;RS485_Slave.c: 33:     TRISB = 0xFF;
   543  000E1A  6893               	setf	147,c	;volatile
   544  000E1C                     
   545                           ;RS485_Slave.c: 34:     TRISDbits.RD0 = 0;
   546  000E1C  9095               	bcf	149,0,c	;volatile
   547  000E1E                     
   548                           ;RS485_Slave.c: 35:     TRISDbits.RD1 = 0;
   549  000E1E  9295               	bcf	149,1,c	;volatile
   550  000E20                     
   551                           ;RS485_Slave.c: 36:     TRISDbits.RD2 = 0;
   552  000E20  9495               	bcf	149,2,c	;volatile
   553  000E22                     
   554                           ;RS485_Slave.c: 37:     TRISDbits.RD3 = 0;
   555  000E22  9695               	bcf	149,3,c	;volatile
   556                           
   557                           ;RS485_Slave.c: 38:     LATD = 0x00;
   558  000E24  0E00               	movlw	0
   559  000E26  6E8C               	movwf	140,c	;volatile
   560  000E28                     
   561                           ;RS485_Slave.c: 39:     TRISCbits.RC2 = 0;
   562  000E28  9494               	bcf	148,2,c	;volatile
   563  000E2A                     
   564                           ;RS485_Slave.c: 40:     LATCbits.LC2 = 0;
   565  000E2A  948B               	bcf	139,2,c	;volatile
   566  000E2C                     
   567                           ;RS485_Slave.c: 41:     Uart_Init(9600);
   568  000E2C  0E80               	movlw	128
   569  000E2E  6E0E               	movwf	Uart_Init@baud^0,c
   570  000E30  0E25               	movlw	37
   571  000E32  6E0F               	movwf	(Uart_Init@baud+1)^0,c
   572  000E34  0E00               	movlw	0
   573  000E36  6E10               	movwf	(Uart_Init@baud+2)^0,c
   574  000E38  0E00               	movlw	0
   575  000E3A  6E11               	movwf	(Uart_Init@baud+3)^0,c
   576  000E3C  ECFE  F008         	call	_Uart_Init	;wreg free
   577  000E40  EF44  F007         	goto	l1693
   578  000E44                     l107:
   579                           
   580                           ; BSR set to: 0
   581                           ;RS485_Slave.c: 46:         {;RS485_Slave.c: 47:             LATCbits.LC2 = 0;
   582  000E44  948B               	bcf	139,2,c	;volatile
   583  000E46                     
   584                           ; BSR set to: 0
   585                           ;RS485_Slave.c: 48:             Uart_Read_String(buffer_rx, 10);
   586  000E46  0E92               	movlw	low _buffer_rx
   587  000E48  6E01               	movwf	Uart_Read_String@Buf^0,c
   588  000E4A  0E00               	movlw	high _buffer_rx
   589  000E4C  6E02               	movwf	(Uart_Read_String@Buf+1)^0,c
   590  000E4E  0E00               	movlw	0
   591  000E50  6E04               	movwf	(Uart_Read_String@s_buf+1)^0,c
   592  000E52  0E0A               	movlw	10
   593  000E54  6E03               	movwf	Uart_Read_String@s_buf^0,c
   594  000E56  EC35  F009         	call	_Uart_Read_String	;wreg free
   595  000E5A                     
   596                           ;RS485_Slave.c: 49:             char dato_rx = atoi(buffer_rx);
   597  000E5A  0E92               	movlw	low _buffer_rx
   598  000E5C  6E08               	movwf	atoi@s^0,c
   599  000E5E  0E00               	movlw	high _buffer_rx
   600  000E60  6E09               	movwf	(atoi@s+1)^0,c
   601  000E62  ECCE  F005         	call	_atoi	;wreg free
   602  000E66  5008               	movf	?_atoi^0,w,c
   603  000E68  6E5D               	movwf	main@dato_rx^0,c
   604  000E6A                     
   605                           ;RS485_Slave.c: 50:             LATD = dato_rx;
   606  000E6A  C05D  FF8C         	movff	main@dato_rx,3980	;volatile
   607  000E6E                     
   608                           ;RS485_Slave.c: 51:             _delay((unsigned long)((10)*(48000000/4000.0)));
   609  000E6E  0E9C               	movlw	156
   610  000E70  6E5C               	movwf	??_main^0,c
   611  000E72  0ED7               	movlw	215
   612  000E74                     u1067:
   613  000E74  2EE8               	decfsz	wreg,f,c
   614  000E76  D7FE               	bra	u1067
   615  000E78  2E5C               	decfsz	??_main^0,f,c
   616  000E7A  D7FC               	bra	u1067
   617  000E7C  F000               	nop	
   618  000E7E                     
   619                           ;RS485_Slave.c: 52:             bit_flag = 0;
   620  000E7E  0E00               	movlw	0
   621  000E80  0100               	movlb	0	; () banked
   622  000E82  6FA5               	movwf	(_bit_flag+1)& (0+255),b
   623  000E84  0E00               	movlw	0
   624  000E86  6FA4               	movwf	_bit_flag& (0+255),b
   625  000E88                     l1693:
   626                           
   627                           ;RS485_Slave.c: 45:         while(bit_flag == 1)
   628  000E88  0100               	movlb	0	; () banked
   629  000E8A  05A4               	decf	_bit_flag& (0+255),w,b
   630  000E8C  11A5               	iorwf	(_bit_flag+1)& (0+255),w,b
   631  000E8E  B4D8               	btfsc	status,2,c
   632  000E90  EF4C  F007         	goto	u1051
   633  000E94  EF4E  F007         	goto	u1050
   634  000E98                     u1051:
   635  000E98  EF22  F007         	goto	l107
   636  000E9C                     u1050:
   637  000E9C                     
   638                           ; BSR set to: 0
   639                           ;RS485_Slave.c: 55:         LATCbits.LC2 = 1;
   640  000E9C  848B               	bsf	139,2,c	;volatile
   641  000E9E                     
   642                           ; BSR set to: 0
   643                           ;RS485_Slave.c: 56:         _delay((unsigned long)((2)*(48000000/4000.0)));
   644  000E9E  0E20               	movlw	32
   645  000EA0  6E5C               	movwf	??_main^0,c
   646  000EA2  0E2A               	movlw	42
   647  000EA4                     u1077:
   648  000EA4  2EE8               	decfsz	wreg,f,c
   649  000EA6  D7FE               	bra	u1077
   650  000EA8  2E5C               	decfsz	??_main^0,f,c
   651  000EAA  D7FC               	bra	u1077
   652  000EAC                     
   653                           ;RS485_Slave.c: 57:         char v_dato = PORTB & 0x0F;
   654  000EAC  5081               	movf	129,w,c	;volatile
   655  000EAE  0B0F               	andlw	15
   656  000EB0  6E5E               	movwf	main@v_dato^0,c
   657  000EB2                     
   658                           ;RS485_Slave.c: 58:         sprintf(buffer_tx, "%u\r\n", v_dato);
   659  000EB2  0E88               	movlw	low _buffer_tx
   660  000EB4  6E56               	movwf	sprintf@s^0,c
   661  000EB6  0E00               	movlw	high _buffer_tx
   662  000EB8  6E57               	movwf	(sprintf@s+1)^0,c
   663  000EBA  0E01               	movlw	low STR_1
   664  000EBC  6E58               	movwf	sprintf@fmt^0,c
   665  000EBE  0E08               	movlw	high STR_1
   666  000EC0  6E59               	movwf	(sprintf@fmt+1)^0,c
   667  000EC2  C05E  F05A         	movff	main@v_dato,?_sprintf+4
   668  000EC6  6A5B               	clrf	(?_sprintf+5)^0,c
   669  000EC8  EC9C  F009         	call	_sprintf	;wreg free
   670  000ECC                     
   671                           ;RS485_Slave.c: 59:         Uart_Send_String(buffer_tx);
   672  000ECC  0E88               	movlw	low _buffer_tx
   673  000ECE  6E02               	movwf	Uart_Send_String@info^0,c
   674  000ED0  0E00               	movlw	high _buffer_tx
   675  000ED2  6E03               	movwf	(Uart_Send_String@info+1)^0,c
   676  000ED4  EC47  F00A         	call	_Uart_Send_String	;wreg free
   677  000ED8                     
   678                           ;RS485_Slave.c: 60:         _delay((unsigned long)((2)*(48000000/4000.0)));
   679  000ED8  0E20               	movlw	32
   680  000EDA  6E5C               	movwf	??_main^0,c
   681  000EDC  0E2A               	movlw	42
   682  000EDE                     u1087:
   683  000EDE  2EE8               	decfsz	wreg,f,c
   684  000EE0  D7FE               	bra	u1087
   685  000EE2  2E5C               	decfsz	??_main^0,f,c
   686  000EE4  D7FC               	bra	u1087
   687  000EE6                     
   688                           ;RS485_Slave.c: 61:         bit_flag = 1;
   689  000EE6  0E00               	movlw	0
   690  000EE8  0100               	movlb	0	; () banked
   691  000EEA  6FA5               	movwf	(_bit_flag+1)& (0+255),b
   692  000EEC  0E01               	movlw	1
   693  000EEE  6FA4               	movwf	_bit_flag& (0+255),b
   694  000EF0  EF44  F007         	goto	l1693
   695  000EF4  EF00  F000         	goto	start
   696  000EF8                     __end_of_main:
   697                           	callstack 0
   698                           
   699 ;; *************** function _sprintf *****************
   700 ;; Defined at:
   701 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  s               2   85[COMRAM] PTR unsigned char 
   704 ;;		 -> buffer_tx(10), 
   705 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   706 ;;		 -> STR_1(5), 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  f               6    2[BANK0 ] struct _IO_FILE
   709 ;;  ap              2    0[BANK0 ] PTR void [1]
   710 ;;		 -> ?_sprintf(2), 
   711 ;;  ret             2    0        int 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2   85[COMRAM] int 
   714 ;; Registers used:
   715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   721 ;;      Params:         6       0       0       0       0       0       0       0       0
   722 ;;      Locals:         0       8       0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0
   724 ;;      Totals:         6       8       0       0       0       0       0       0       0
   725 ;;Total ram usage:       14 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 7
   728 ;; This function calls:
   729 ;;		_vfprintf
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text1
   736  001338                     __ptext1:
   737                           	callstack 0
   738  001338                     _sprintf:
   739                           	callstack 23
   740  001338  0E5A               	movlw	low (?_sprintf+4)
   741  00133A  0100               	movlb	0	; () banked
   742  00133C  6F9C               	movwf	sprintf@ap& (0+255),b
   743  00133E  0E00               	movlw	high (?_sprintf+4)
   744  001340  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
   745  001342  C056  F09E         	movff	sprintf@s,sprintf@f
   746  001346  C057  F09F         	movff	sprintf@s+1,sprintf@f+1
   747  00134A                     
   748                           ; BSR set to: 0
   749  00134A  0E00               	movlw	0
   750  00134C  6FA1               	movwf	(sprintf@f+3)& (0+255),b
   751  00134E  0E00               	movlw	0
   752  001350  6FA0               	movwf	(sprintf@f+2)& (0+255),b
   753  001352                     
   754                           ; BSR set to: 0
   755  001352  0E00               	movlw	0
   756  001354  6FA3               	movwf	(sprintf@f+5)& (0+255),b
   757  001356  0E00               	movlw	0
   758  001358  6FA2               	movwf	(sprintf@f+4)& (0+255),b
   759  00135A                     
   760                           ; BSR set to: 0
   761  00135A  0E9E               	movlw	low sprintf@f
   762  00135C  6E4E               	movwf	vfprintf@fp^0,c
   763  00135E  0E00               	movlw	high sprintf@f
   764  001360  6E4F               	movwf	(vfprintf@fp+1)^0,c
   765  001362  C058  F050         	movff	sprintf@fmt,vfprintf@fmt
   766  001366  C059  F051         	movff	sprintf@fmt+1,vfprintf@fmt+1
   767  00136A  0E9C               	movlw	low sprintf@ap
   768  00136C  6E52               	movwf	vfprintf@ap^0,c
   769  00136E  0E00               	movlw	high sprintf@ap
   770  001370  6E53               	movwf	(vfprintf@ap+1)^0,c
   771  001372  EC6B  F009         	call	_vfprintf	;wreg free
   772  001376  0100               	movlb	0	; () banked
   773  001378  51A0               	movf	(sprintf@f+2)& (0+255),w,b
   774  00137A  2456               	addwf	sprintf@s^0,w,c
   775  00137C  6ED9               	movwf	fsr2l,c
   776  00137E  51A1               	movf	(sprintf@f+3)& (0+255),w,b
   777  001380  2057               	addwfc	(sprintf@s+1)^0,w,c
   778  001382  6EDA               	movwf	fsr2h,c
   779  001384  0E00               	movlw	0
   780  001386  6EDF               	movwf	indf2,c
   781  001388                     
   782                           ; BSR set to: 0
   783  001388  0012               	return		;funcret
   784  00138A                     __end_of_sprintf:
   785                           	callstack 0
   786                           
   787 ;; *************** function _vfprintf *****************
   788 ;; Defined at:
   789 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
   792 ;;		 -> sprintf@f(6), 
   793 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
   794 ;;		 -> STR_1(5), 
   795 ;;  ap              2   81[COMRAM] PTR PTR void 
   796 ;;		 -> sprintf@ap(2), 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
   799 ;;		 -> STR_1(5), 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  2   77[COMRAM] int 
   802 ;; Registers used:
   803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   809 ;;      Params:         6       0       0       0       0       0       0       0       0
   810 ;;      Locals:         2       0       0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0
   812 ;;      Totals:         8       0       0       0       0       0       0       0       0
   813 ;;Total ram usage:        8 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 6
   816 ;; This function calls:
   817 ;;		_vfpfcnvrt
   818 ;; This function is called by:
   819 ;;		_sprintf
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text2
   824  0012D6                     __ptext2:
   825                           	callstack 0
   826  0012D6                     _vfprintf:
   827                           	callstack 23
   828  0012D6                     
   829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   830  0012D6  C050  F054         	movff	vfprintf@fmt,vfprintf@cfmt
   831  0012DA  C051  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   832  0012DE                     
   833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   834  0012DE  0E00               	movlw	0
   835  0012E0  0100               	movlb	0	; () banked
   836  0012E2  6F61               	movwf	(_nout+1)& (0+255),b
   837  0012E4  0E00               	movlw	0
   838  0012E6  6F60               	movwf	_nout& (0+255),b
   839                           
   840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   841  0012E8  EF89  F009         	goto	l1555
   842  0012EC                     l1553:
   843                           
   844                           ; BSR set to: 0
   845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   846  0012EC  C04E  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   847  0012F0  C04F  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   848  0012F4  0E54               	movlw	low vfprintf@cfmt
   849  0012F6  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   850  0012F8  0E00               	movlw	high vfprintf@cfmt
   851  0012FA  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   852  0012FC  C052  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   853  001300  C053  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   854  001304  EC05  F005         	call	_vfpfcnvrt	;wreg free
   855  001308  503C               	movf	?_vfpfcnvrt^0,w,c
   856  00130A  0100               	movlb	0	; () banked
   857  00130C  2760               	addwf	_nout& (0+255),f,b
   858  00130E  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   859  001310  2361               	addwfc	(_nout+1)& (0+255),f,b
   860  001312                     l1555:
   861                           
   862                           ; BSR set to: 0
   863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   864  001312  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
   865  001316  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   866  00131A                     	if	0	;tblptru may be non-zero
   867  00131A                     	endif
   868  00131A                     	if	0	;tblptru may be non-zero
   869  00131A                     	endif
   870  00131A  0008               	tblrd		*
   871  00131C  50F5               	movf	tablat,w,c
   872  00131E  0900               	iorlw	0
   873  001320  A4D8               	btfss	status,2,c
   874  001322  EF95  F009         	goto	u911
   875  001326  EF97  F009         	goto	u910
   876  00132A                     u911:
   877  00132A  EF76  F009         	goto	l1553
   878  00132E                     u910:
   879  00132E                     
   880                           ; BSR set to: 0
   881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   882  00132E  C060  F04E         	movff	_nout,?_vfprintf
   883  001332  C061  F04F         	movff	_nout+1,?_vfprintf+1
   884  001336                     
   885                           ; BSR set to: 0
   886  001336  0012               	return		;funcret
   887  001338                     __end_of_vfprintf:
   888                           	callstack 0
   889                           
   890 ;; *************** function _vfpfcnvrt *****************
   891 ;; Defined at:
   892 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   895 ;;		 -> sprintf@f(6), 
   896 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   897 ;;		 -> vfprintf@cfmt(2), 
   898 ;;  ap              2   63[COMRAM] PTR PTR void 
   899 ;;		 -> sprintf@ap(2), 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  llu             8   69[COMRAM] unsigned long long 
   902 ;;  ll              8    0        long long 
   903 ;;  f               4    0        long long 
   904 ;;  vp              3    0        PTR void 
   905 ;;  ct              3    0        unsigned char [3]
   906 ;;  cp              3    0        PTR unsigned char 
   907 ;;  i               2    0        int 
   908 ;;  done            2    0        int 
   909 ;;  c               1    0        unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2   59[COMRAM] int 
   912 ;; Registers used:
   913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         6       0       0       0       0       0       0       0       0
   920 ;;      Locals:         8       0       0       0       0       0       0       0       0
   921 ;;      Temps:          4       0       0       0       0       0       0       0       0
   922 ;;      Totals:        18       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:       18 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 5
   926 ;; This function calls:
   927 ;;		_fputc
   928 ;;		_utoa
   929 ;; This function is called by:
   930 ;;		_vfprintf
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text3
   935  000A0A                     __ptext3:
   936                           	callstack 0
   937  000A0A                     _vfpfcnvrt:
   938                           	callstack 23
   939  000A0A                     
   940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   941  000A0A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   942  000A0E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   943  000A12  CFDE FFF6          	movff	postinc2,tblptrl
   944  000A16  CFDD FFF7          	movff	postdec2,tblptrh
   945  000A1A                     	if	0	;tblptru may be non-zero
   946  000A1A                     	endif
   947  000A1A                     	if	0	;tblptru may be non-zero
   948  000A1A                     	endif
   949  000A1A  0008               	tblrd		*
   950  000A1C  50F5               	movf	tablat,w,c
   951  000A1E  0A25               	xorlw	37
   952  000A20  A4D8               	btfss	status,2,c
   953  000A22  EF15  F005         	goto	u781
   954  000A26  EF17  F005         	goto	u780
   955  000A2A                     u781:
   956  000A2A  EFB2  F005         	goto	l1485
   957  000A2E                     u780:
   958  000A2E                     
   959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   960  000A2E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   961  000A32  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   962  000A36  2ADE               	incf	postinc2,f,c
   963  000A38  0E00               	movlw	0
   964  000A3A  22DD               	addwfc	postdec2,f,c
   965  000A3C                     
   966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   967  000A3C  0E00               	movlw	0
   968  000A3E  0100               	movlb	0	; () banked
   969  000A40  6F63               	movwf	(_width+1)& (0+255),b
   970  000A42  0E00               	movlw	0
   971  000A44  6F62               	movwf	_width& (0+255),b
   972  000A46  C062  F066         	movff	_width,_flags
   973  000A4A  C063  F067         	movff	_width+1,_flags+1
   974  000A4E                     
   975                           ; BSR set to: 0
   976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   977  000A4E  6964               	setf	_prec& (0+255),b
   978  000A50  6965               	setf	(_prec+1)& (0+255),b
   979  000A52                     
   980                           ; BSR set to: 0
   981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
   982  000A52  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   983  000A56  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   984  000A5A  CFDE FFF6          	movff	postinc2,tblptrl
   985  000A5E  CFDD FFF7          	movff	postdec2,tblptrh
   986  000A62                     	if	0	;tblptru may be non-zero
   987  000A62                     	endif
   988  000A62                     	if	0	;tblptru may be non-zero
   989  000A62                     	endif
   990  000A62  0008               	tblrd		*
   991  000A64  50F5               	movf	tablat,w,c
   992  000A66  0A75               	xorlw	117
   993  000A68  A4D8               	btfss	status,2,c
   994  000A6A  EF39  F005         	goto	u791
   995  000A6E  EF3B  F005         	goto	u790
   996  000A72                     u791:
   997  000A72  EF7C  F005         	goto	l1469
   998  000A76                     u790:
   999  000A76                     
  1000                           ; BSR set to: 0
  1001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1002  000A76  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1003  000A7A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1004  000A7E  2ADE               	incf	postinc2,f,c
  1005  000A80  0E00               	movlw	0
  1006  000A82  22DD               	addwfc	postdec2,f,c
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1009  000A84  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1010  000A88  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1011  000A8C  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1012  000A90  0E02               	movlw	2
  1013  000A92  26DE               	addwf	postinc2,f,c
  1014  000A94  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1015  000A98  0E00               	movlw	0
  1016  000A9A  22DD               	addwfc	postdec2,f,c
  1017  000A9C  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1018  000AA0  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1019  000AA4  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1020  000AA8  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1021  000AAC  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1022  000AB0  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1023  000AB4  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1024  000AB6  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1025  000AB8  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1026  000ABA  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1027  000ABC  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1028  000ABE  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1029  000AC0                     
  1030                           ; BSR set to: 0
  1031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1032  000AC0  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1033  000AC4  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1034  000AC8  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1035  000ACC  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1036  000AD0  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1037  000AD4  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1038  000AD8  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1039  000ADC  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1040  000AE0  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1041  000AE4  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1042  000AE8  EC04  F004         	call	_utoa	;wreg free
  1043  000AEC  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1044  000AF0  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1045  000AF4  EFCD  F005         	goto	l887
  1046  000AF8                     l1469:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1050  000AF8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1051  000AFC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1052  000B00  CFDE FFF6          	movff	postinc2,tblptrl
  1053  000B04  CFDD FFF7          	movff	postdec2,tblptrh
  1054  000B08                     	if	0	;tblptru may be non-zero
  1055  000B08                     	endif
  1056  000B08                     	if	0	;tblptru may be non-zero
  1057  000B08                     	endif
  1058  000B08  0008               	tblrd		*
  1059  000B0A  50F5               	movf	tablat,w,c
  1060  000B0C  0A25               	xorlw	37
  1061  000B0E  A4D8               	btfss	status,2,c
  1062  000B10  EF8C  F005         	goto	u801
  1063  000B14  EF8E  F005         	goto	u800
  1064  000B18                     u801:
  1065  000B18  EFA5  F005         	goto	l1479
  1066  000B1C                     u800:
  1067  000B1C                     
  1068                           ; BSR set to: 0
  1069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1070  000B1C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1071  000B20  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1072  000B24  2ADE               	incf	postinc2,f,c
  1073  000B26  0E00               	movlw	0
  1074  000B28  22DD               	addwfc	postdec2,f,c
  1075  000B2A                     
  1076                           ; BSR set to: 0
  1077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1078  000B2A  0E00               	movlw	0
  1079  000B2C  6E02               	movwf	(fputc@c+1)^0,c
  1080  000B2E  0E25               	movlw	37
  1081  000B30  6E01               	movwf	fputc@c^0,c
  1082  000B32  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1083  000B36  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1084  000B3A  ECE4  F007         	call	_fputc	;wreg free
  1085  000B3E                     l1475:
  1086                           
  1087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1088  000B3E  0E00               	movlw	0
  1089  000B40  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1090  000B42  0E01               	movlw	1
  1091  000B44  6E3C               	movwf	?_vfpfcnvrt^0,c
  1092  000B46  EFCD  F005         	goto	l887
  1093  000B4A                     l1479:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1097  000B4A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1098  000B4E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1099  000B52  2ADE               	incf	postinc2,f,c
  1100  000B54  0E00               	movlw	0
  1101  000B56  22DD               	addwfc	postdec2,f,c
  1102  000B58                     
  1103                           ; BSR set to: 0
  1104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1105  000B58  0E00               	movlw	0
  1106  000B5A  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1107  000B5C  0E00               	movlw	0
  1108  000B5E  6E3C               	movwf	?_vfpfcnvrt^0,c
  1109  000B60  EFCD  F005         	goto	l887
  1110  000B64                     l1485:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1113  000B64  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1114  000B68  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1115  000B6C  CFDE FFF6          	movff	postinc2,tblptrl
  1116  000B70  CFDD FFF7          	movff	postdec2,tblptrh
  1117  000B74                     	if	0	;tblptru may be non-zero
  1118  000B74                     	endif
  1119  000B74                     	if	0	;tblptru may be non-zero
  1120  000B74                     	endif
  1121  000B74  0008               	tblrd		*
  1122  000B76  50F5               	movf	tablat,w,c
  1123  000B78  6E01               	movwf	fputc@c^0,c
  1124  000B7A  6A02               	clrf	(fputc@c+1)^0,c
  1125  000B7C  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1126  000B80  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1127  000B84  ECE4  F007         	call	_fputc	;wreg free
  1128  000B88                     
  1129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1130  000B88  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1131  000B8C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1132  000B90  2ADE               	incf	postinc2,f,c
  1133  000B92  0E00               	movlw	0
  1134  000B94  22DD               	addwfc	postdec2,f,c
  1135  000B96  EF9F  F005         	goto	l1475
  1136  000B9A                     l887:
  1137  000B9A  0012               	return		;funcret
  1138  000B9C                     __end_of_vfpfcnvrt:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _utoa *****************
  1142 ;; Defined at:
  1143 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1146 ;;		 -> sprintf@f(6), 
  1147 ;;  d               8   29[COMRAM] unsigned long long 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  n               8   49[COMRAM] unsigned long long 
  1150 ;;  i               2   57[COMRAM] int 
  1151 ;;  w               2   47[COMRAM] int 
  1152 ;;  p               2   45[COMRAM] int 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2   27[COMRAM] int 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:        10       0       0       0       0       0       0       0       0
  1163 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1164 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1165 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1166 ;;Total ram usage:       32 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 4
  1169 ;; This function calls:
  1170 ;;		___lodiv
  1171 ;;		___lomod
  1172 ;;		_pad
  1173 ;; This function is called by:
  1174 ;;		_vfpfcnvrt
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text4
  1179  000808                     __ptext4:
  1180                           	callstack 0
  1181  000808                     _utoa:
  1182                           	callstack 23
  1183  000808                     
  1184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1185  000808  0100               	movlb	0	; () banked
  1186  00080A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1187  00080C  EF0A  F004         	goto	u711
  1188  000810  EF0C  F004         	goto	u710
  1189  000814                     u711:
  1190  000814  EF0D  F004         	goto	l1421
  1191  000818                     u710:
  1192  000818                     
  1193                           ; BSR set to: 0
  1194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1195  000818  9366               	bcf	_flags& (0+255),1,b
  1196  00081A                     l1421:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1200  00081A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1201  00081C  EF1A  F004         	goto	u720
  1202  000820  5165               	movf	(_prec+1)& (0+255),w,b
  1203  000822  E106               	bnz	u721
  1204  000824  0564               	decf	_prec& (0+255),w,b
  1205  000826  B0D8               	btfsc	status,0,c
  1206  000828  EF18  F004         	goto	u721
  1207  00082C  EF1A  F004         	goto	u720
  1208  000830                     u721:
  1209  000830  EF20  F004         	goto	l872
  1210  000834                     u720:
  1211  000834                     
  1212                           ; BSR set to: 0
  1213  000834  0E00               	movlw	0
  1214  000836  6E2F               	movwf	(utoa@p+1)^0,c
  1215  000838  0E01               	movlw	1
  1216  00083A  6E2E               	movwf	utoa@p^0,c
  1217  00083C  EF24  F004         	goto	l874
  1218  000840                     l872:
  1219                           
  1220                           ; BSR set to: 0
  1221  000840  C064  F02E         	movff	_prec,utoa@p
  1222  000844  C065  F02F         	movff	_prec+1,utoa@p+1
  1223  000848                     l874:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1227  000848  C062  F030         	movff	_width,utoa@w
  1228  00084C  C063  F031         	movff	_width+1,utoa@w+1
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1231  000850  C01E  F032         	movff	utoa@d,utoa@n
  1232  000854  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1233  000858  C020  F034         	movff	utoa@d+2,utoa@n+2
  1234  00085C  C021  F035         	movff	utoa@d+3,utoa@n+3
  1235  000860  C022  F036         	movff	utoa@d+4,utoa@n+4
  1236  000864  C023  F037         	movff	utoa@d+5,utoa@n+5
  1237  000868  C024  F038         	movff	utoa@d+6,utoa@n+6
  1238  00086C  C025  F039         	movff	utoa@d+7,utoa@n+7
  1239  000870                     
  1240                           ; BSR set to: 0
  1241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1242  000870  0E00               	movlw	0
  1243  000872  6E3B               	movwf	(utoa@i+1)^0,c
  1244  000874  0E1F               	movlw	31
  1245  000876  6E3A               	movwf	utoa@i^0,c
  1246  000878                     
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1249  000878  0E00               	movlw	0
  1250  00087A  6F87               	movwf	(_dbuf+31)& (0+255),b
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1253  00087C  EFB6  F004         	goto	l1439
  1254  000880                     l1429:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  1257  000880  063A               	decf	utoa@i^0,f,c
  1258  000882  A0D8               	btfss	status,0,c
  1259  000884  063B               	decf	(utoa@i+1)^0,f,c
  1260  000886                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1262  000886  0E68               	movlw	low _dbuf
  1263  000888  243A               	addwf	utoa@i^0,w,c
  1264  00088A  6ED9               	movwf	fsr2l,c
  1265  00088C  0E00               	movlw	high _dbuf
  1266  00088E  203B               	addwfc	(utoa@i+1)^0,w,c
  1267  000890  6EDA               	movwf	fsr2h,c
  1268  000892  C032  F001         	movff	utoa@n,___lomod@dividend
  1269  000896  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1270  00089A  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1271  00089E  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1272  0008A2  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1273  0008A6  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1274  0008AA  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1275  0008AE  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1276  0008B2  0E0A               	movlw	10
  1277  0008B4  6E09               	movwf	___lomod@divisor^0,c
  1278  0008B6  0E00               	movlw	0
  1279  0008B8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1280  0008BA  0E00               	movlw	0
  1281  0008BC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1282  0008BE  0E00               	movlw	0
  1283  0008C0  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1284  0008C2  0E00               	movlw	0
  1285  0008C4  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1286  0008C6  0E00               	movlw	0
  1287  0008C8  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1288  0008CA  0E00               	movlw	0
  1289  0008CC  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1290  0008CE  0E00               	movlw	0
  1291  0008D0  6E10               	movwf	(___lomod@divisor+7)^0,c
  1292  0008D2  EC7C  F007         	call	___lomod	;wreg free
  1293  0008D6  C001  F026         	movff	?___lomod,??_utoa
  1294  0008DA  C002  F027         	movff	?___lomod+1,??_utoa+1
  1295  0008DE  C003  F028         	movff	?___lomod+2,??_utoa+2
  1296  0008E2  C004  F029         	movff	?___lomod+3,??_utoa+3
  1297  0008E6  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1298  0008EA  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1299  0008EE  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1300  0008F2  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1301  0008F6  5026               	movf	??_utoa^0,w,c
  1302  0008F8  0F30               	addlw	48
  1303  0008FA  6EDF               	movwf	indf2,c
  1304  0008FC                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  1306  0008FC  062E               	decf	utoa@p^0,f,c
  1307  0008FE  A0D8               	btfss	status,0,c
  1308  000900  062F               	decf	(utoa@p+1)^0,f,c
  1309  000902                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  1311  000902  0630               	decf	utoa@w^0,f,c
  1312  000904  A0D8               	btfss	status,0,c
  1313  000906  0631               	decf	(utoa@w+1)^0,f,c
  1314  000908                     
  1315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1316  000908  C032  F001         	movff	utoa@n,___lodiv@dividend
  1317  00090C  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1318  000910  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1319  000914  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1320  000918  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1321  00091C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1322  000920  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1323  000924  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1324  000928  0E0A               	movlw	10
  1325  00092A  6E09               	movwf	___lodiv@divisor^0,c
  1326  00092C  0E00               	movlw	0
  1327  00092E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1328  000930  0E00               	movlw	0
  1329  000932  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1330  000934  0E00               	movlw	0
  1331  000936  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1332  000938  0E00               	movlw	0
  1333  00093A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1334  00093C  0E00               	movlw	0
  1335  00093E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1336  000940  0E00               	movlw	0
  1337  000942  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1338  000944  0E00               	movlw	0
  1339  000946  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1340  000948  EC93  F006         	call	___lodiv	;wreg free
  1341  00094C  C001  F032         	movff	?___lodiv,utoa@n
  1342  000950  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1343  000954  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1344  000958  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1345  00095C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1346  000960  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1347  000964  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1348  000968  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1349  00096C                     l1439:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1352  00096C  503A               	movf	utoa@i^0,w,c
  1353  00096E  103B               	iorwf	(utoa@i+1)^0,w,c
  1354  000970  B4D8               	btfsc	status,2,c
  1355  000972  EFBD  F004         	goto	u731
  1356  000976  EFBF  F004         	goto	u730
  1357  00097A                     u731:
  1358  00097A  EFF0  F004         	goto	l1449
  1359  00097E                     u730:
  1360  00097E  5032               	movf	utoa@n^0,w,c
  1361  000980  1033               	iorwf	(utoa@n+1)^0,w,c
  1362  000982  1034               	iorwf	(utoa@n+2)^0,w,c
  1363  000984  1035               	iorwf	(utoa@n+3)^0,w,c
  1364  000986  1036               	iorwf	(utoa@n+4)^0,w,c
  1365  000988  1037               	iorwf	(utoa@n+5)^0,w,c
  1366  00098A  1038               	iorwf	(utoa@n+6)^0,w,c
  1367  00098C  1039               	iorwf	(utoa@n+7)^0,w,c
  1368  00098E  A4D8               	btfss	status,2,c
  1369  000990  EFCC  F004         	goto	u741
  1370  000994  EFCE  F004         	goto	u740
  1371  000998                     u741:
  1372  000998  EF40  F004         	goto	l1429
  1373  00099C                     u740:
  1374  00099C  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1375  00099E  EFDB  F004         	goto	u750
  1376  0009A2  502F               	movf	(utoa@p+1)^0,w,c
  1377  0009A4  E106               	bnz	u751
  1378  0009A6  042E               	decf	utoa@p^0,w,c
  1379  0009A8  B0D8               	btfsc	status,0,c
  1380  0009AA  EFD9  F004         	goto	u751
  1381  0009AE  EFDB  F004         	goto	u750
  1382  0009B2                     u751:
  1383  0009B2  EF40  F004         	goto	l1429
  1384  0009B6                     u750:
  1385  0009B6  BE31               	btfsc	(utoa@w+1)^0,7,c
  1386  0009B8  EFE6  F004         	goto	u761
  1387  0009BC  5031               	movf	(utoa@w+1)^0,w,c
  1388  0009BE  E108               	bnz	u760
  1389  0009C0  0430               	decf	utoa@w^0,w,c
  1390  0009C2  A0D8               	btfss	status,0,c
  1391  0009C4  EFE6  F004         	goto	u761
  1392  0009C8  EFE8  F004         	goto	u760
  1393  0009CC                     u761:
  1394  0009CC  EFF0  F004         	goto	l1449
  1395  0009D0                     u760:
  1396  0009D0  0100               	movlb	0	; () banked
  1397  0009D2  B366               	btfsc	_flags& (0+255),1,b
  1398  0009D4  EFEE  F004         	goto	u771
  1399  0009D8  EFF0  F004         	goto	u770
  1400  0009DC                     u771:
  1401  0009DC  EF40  F004         	goto	l1429
  1402  0009E0                     u770:
  1403  0009E0                     l1449:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  1406  0009E0  C01C  F011         	movff	utoa@fp,pad@fp
  1407  0009E4  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1408  0009E8  0E68               	movlw	low _dbuf
  1409  0009EA  243A               	addwf	utoa@i^0,w,c
  1410  0009EC  6E13               	movwf	pad@buf^0,c
  1411  0009EE  0E00               	movlw	high _dbuf
  1412  0009F0  203B               	addwfc	(utoa@i+1)^0,w,c
  1413  0009F2  6E14               	movwf	(pad@buf+1)^0,c
  1414  0009F4  C030  F015         	movff	utoa@w,pad@p
  1415  0009F8  C031  F016         	movff	utoa@w+1,pad@p+1
  1416  0009FC  EC49  F008         	call	_pad	;wreg free
  1417  000A00  C011  F01C         	movff	?_pad,?_utoa
  1418  000A04  C012  F01D         	movff	?_pad+1,?_utoa+1
  1419  000A08  0012               	return		;funcret
  1420  000A0A                     __end_of_utoa:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _pad *****************
  1424 ;; Defined at:
  1425 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1428 ;;		 -> sprintf@f(6), 
  1429 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1430 ;;		 -> dbuf(32), 
  1431 ;;  p               2   20[COMRAM] int 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  w               2   25[COMRAM] int 
  1434 ;;  i               2   23[COMRAM] int 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   16[COMRAM] int 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         6       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1447 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:       11 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 3
  1451 ;; This function calls:
  1452 ;;		_fputc
  1453 ;;		_fputs
  1454 ;;		_strlen
  1455 ;; This function is called by:
  1456 ;;		_utoa
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text5
  1461  001092                     __ptext5:
  1462                           	callstack 0
  1463  001092                     _pad:
  1464                           	callstack 23
  1465  001092                     
  1466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1467  001092  0100               	movlb	0	; () banked
  1468  001094  A166               	btfss	_flags& (0+255),0,b
  1469  001096  EF4F  F008         	goto	u671
  1470  00109A  EF51  F008         	goto	u670
  1471  00109E                     u671:
  1472  00109E  EF5B  F008         	goto	l1399
  1473  0010A2                     u670:
  1474  0010A2                     
  1475                           ; BSR set to: 0
  1476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1477  0010A2  C013  F00A         	movff	pad@buf,fputs@s
  1478  0010A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1479  0010AA  C011  F00C         	movff	pad@fp,fputs@fp
  1480  0010AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1481  0010B2  ECEE  F009         	call	_fputs	;wreg free
  1482  0010B6                     l1399:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1485  0010B6  BE16               	btfsc	(pad@p+1)^0,7,c
  1486  0010B8  EF60  F008         	goto	u681
  1487  0010BC  EF62  F008         	goto	u680
  1488  0010C0                     u681:
  1489  0010C0  EF68  F008         	goto	l1403
  1490  0010C4                     u680:
  1491  0010C4  C015  F01A         	movff	pad@p,pad@w
  1492  0010C8  C016  F01B         	movff	pad@p+1,pad@w+1
  1493  0010CC  EF6C  F008         	goto	l862
  1494  0010D0                     l1403:
  1495  0010D0  0E00               	movlw	0
  1496  0010D2  6E1B               	movwf	(pad@w+1)^0,c
  1497  0010D4  0E00               	movlw	0
  1498  0010D6  6E1A               	movwf	pad@w^0,c
  1499  0010D8                     l862:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1502  0010D8  0E00               	movlw	0
  1503  0010DA  6E19               	movwf	(pad@i+1)^0,c
  1504  0010DC  0E00               	movlw	0
  1505  0010DE  6E18               	movwf	pad@i^0,c
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1508  0010E0  EF7E  F008         	goto	l1409
  1509  0010E4                     l1405:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1512  0010E4  0E00               	movlw	0
  1513  0010E6  6E02               	movwf	(fputc@c+1)^0,c
  1514  0010E8  0E20               	movlw	32
  1515  0010EA  6E01               	movwf	fputc@c^0,c
  1516  0010EC  C011  F003         	movff	pad@fp,fputc@fp
  1517  0010F0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1518  0010F4  ECE4  F007         	call	_fputc	;wreg free
  1519  0010F8                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1521  0010F8  4A18               	infsnz	pad@i^0,f,c
  1522  0010FA  2A19               	incf	(pad@i+1)^0,f,c
  1523  0010FC                     l1409:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1526  0010FC  501A               	movf	pad@w^0,w,c
  1527  0010FE  5C18               	subwf	pad@i^0,w,c
  1528  001100  5019               	movf	(pad@i+1)^0,w,c
  1529  001102  0A80               	xorlw	128
  1530  001104  6E17               	movwf	??_pad^0,c
  1531  001106  501B               	movf	(pad@w+1)^0,w,c
  1532  001108  0A80               	xorlw	128
  1533  00110A  5817               	subwfb	??_pad^0,w,c
  1534  00110C  A0D8               	btfss	status,0,c
  1535  00110E  EF8B  F008         	goto	u691
  1536  001112  EF8D  F008         	goto	u690
  1537  001116                     u691:
  1538  001116  EF72  F008         	goto	l1405
  1539  00111A                     u690:
  1540  00111A                     
  1541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1542  00111A  0100               	movlb	0	; () banked
  1543  00111C  B166               	btfsc	_flags& (0+255),0,b
  1544  00111E  EF93  F008         	goto	u701
  1545  001122  EF95  F008         	goto	u700
  1546  001126                     u701:
  1547  001126  EF9F  F008         	goto	l1413
  1548  00112A                     u700:
  1549  00112A                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1552  00112A  C013  F00A         	movff	pad@buf,fputs@s
  1553  00112E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1554  001132  C011  F00C         	movff	pad@fp,fputs@fp
  1555  001136  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1556  00113A  ECEE  F009         	call	_fputs	;wreg free
  1557  00113E                     l1413:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1560  00113E  C013  F001         	movff	pad@buf,strlen@s
  1561  001142  C014  F002         	movff	pad@buf+1,strlen@s+1
  1562  001146  EC2C  F00A         	call	_strlen	;wreg free
  1563  00114A  501A               	movf	pad@w^0,w,c
  1564  00114C  2401               	addwf	?_strlen^0,w,c
  1565  00114E  6E11               	movwf	?_pad^0,c
  1566  001150  501B               	movf	(pad@w+1)^0,w,c
  1567  001152  2002               	addwfc	(?_strlen+1)^0,w,c
  1568  001154  6E12               	movwf	(?_pad+1)^0,c
  1569  001156  0012               	return		;funcret
  1570  001158                     __end_of_pad:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _strlen *****************
  1574 ;; Defined at:
  1575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1578 ;;		 -> dbuf(32), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1581 ;;		 -> dbuf(32), 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMRAM] unsigned int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         2       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_pad
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text6
  1605  001458                     __ptext6:
  1606                           	callstack 0
  1607  001458                     _strlen:
  1608                           	callstack 25
  1609  001458  C001  F003         	movff	strlen@s,strlen@a
  1610  00145C  C002  F004         	movff	strlen@s+1,strlen@a+1
  1611  001460  EF34  F00A         	goto	l1351
  1612  001464                     l1349:
  1613  001464  4A01               	infsnz	strlen@s^0,f,c
  1614  001466  2A02               	incf	(strlen@s+1)^0,f,c
  1615  001468                     l1351:
  1616  001468  C001  FFD9         	movff	strlen@s,fsr2l
  1617  00146C  C002  FFDA         	movff	strlen@s+1,fsr2h
  1618  001470  50DF               	movf	indf2,w,c
  1619  001472  A4D8               	btfss	status,2,c
  1620  001474  EF3E  F00A         	goto	u591
  1621  001478  EF40  F00A         	goto	u590
  1622  00147C                     u591:
  1623  00147C  EF32  F00A         	goto	l1349
  1624  001480                     u590:
  1625  001480  5003               	movf	strlen@a^0,w,c
  1626  001482  5C01               	subwf	strlen@s^0,w,c
  1627  001484  6E01               	movwf	?_strlen^0,c
  1628  001486  5004               	movf	(strlen@a+1)^0,w,c
  1629  001488  5802               	subwfb	(strlen@s+1)^0,w,c
  1630  00148A  6E02               	movwf	(?_strlen+1)^0,c
  1631  00148C  0012               	return		;funcret
  1632  00148E                     __end_of_strlen:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _fputs *****************
  1636 ;; Defined at:
  1637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1640 ;;		 -> dbuf(32), 
  1641 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1642 ;;		 -> sprintf@f(6), 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  i               2   14[COMRAM] int 
  1645 ;;  c               1   13[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    9[COMRAM] int 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1655 ;;      Params:         4       0       0       0       0       0       0       0       0
  1656 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1658 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1659 ;;Total ram usage:        7 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 2
  1662 ;; This function calls:
  1663 ;;		_fputc
  1664 ;; This function is called by:
  1665 ;;		_pad
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text7
  1670  0013DC                     __ptext7:
  1671                           	callstack 0
  1672  0013DC                     _fputs:
  1673                           	callstack 23
  1674  0013DC  0E00               	movlw	0
  1675  0013DE  6E10               	movwf	(fputs@i+1)^0,c
  1676  0013E0  0E00               	movlw	0
  1677  0013E2  6E0F               	movwf	fputs@i^0,c
  1678  0013E4  EFFF  F009         	goto	l1345
  1679  0013E8                     l1341:
  1680  0013E8  C00E  F001         	movff	fputs@c,fputc@c
  1681  0013EC  6A02               	clrf	(fputc@c+1)^0,c
  1682  0013EE  C00C  F003         	movff	fputs@fp,fputc@fp
  1683  0013F2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1684  0013F6  ECE4  F007         	call	_fputc	;wreg free
  1685  0013FA  4A0F               	infsnz	fputs@i^0,f,c
  1686  0013FC  2A10               	incf	(fputs@i+1)^0,f,c
  1687  0013FE                     l1345:
  1688  0013FE  500F               	movf	fputs@i^0,w,c
  1689  001400  240A               	addwf	fputs@s^0,w,c
  1690  001402  6ED9               	movwf	fsr2l,c
  1691  001404  5010               	movf	(fputs@i+1)^0,w,c
  1692  001406  200B               	addwfc	(fputs@s+1)^0,w,c
  1693  001408  6EDA               	movwf	fsr2h,c
  1694  00140A  50DF               	movf	indf2,w,c
  1695  00140C  6E0E               	movwf	fputs@c^0,c
  1696  00140E  500E               	movf	fputs@c^0,w,c
  1697  001410  A4D8               	btfss	status,2,c
  1698  001412  EF0D  F00A         	goto	u581
  1699  001416  EF0F  F00A         	goto	u580
  1700  00141A                     u581:
  1701  00141A  EFF4  F009         	goto	l1341
  1702  00141E                     u580:
  1703  00141E  0012               	return		;funcret
  1704  001420                     __end_of_fputs:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _fputc *****************
  1708 ;; Defined at:
  1709 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  c               2    0[COMRAM] int 
  1712 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1713 ;;		 -> sprintf@f(6), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2    0[COMRAM] int 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1727 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1728 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1729 ;;Total ram usage:        9 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 1
  1732 ;; This function calls:
  1733 ;;		_putch
  1734 ;; This function is called by:
  1735 ;;		_pad
  1736 ;;		_vfpfcnvrt
  1737 ;;		_fputs
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text8
  1742  000FC8                     __ptext8:
  1743                           	callstack 0
  1744  000FC8                     _fputc:
  1745                           	callstack 23
  1746  000FC8  5003               	movf	fputc@fp^0,w,c
  1747  000FCA  1004               	iorwf	(fputc@fp+1)^0,w,c
  1748  000FCC  B4D8               	btfsc	status,2,c
  1749  000FCE  EFEB  F007         	goto	u541
  1750  000FD2  EFED  F007         	goto	u540
  1751  000FD6                     u541:
  1752  000FD6  EFF6  F007         	goto	l1329
  1753  000FDA                     u540:
  1754  000FDA  5003               	movf	fputc@fp^0,w,c
  1755  000FDC  1004               	iorwf	(fputc@fp+1)^0,w,c
  1756  000FDE  A4D8               	btfss	status,2,c
  1757  000FE0  EFF4  F007         	goto	u551
  1758  000FE4  EFF6  F007         	goto	u550
  1759  000FE8                     u551:
  1760  000FE8  EFFB  F007         	goto	l1331
  1761  000FEC                     u550:
  1762  000FEC                     l1329:
  1763  000FEC  5001               	movf	fputc@c^0,w,c
  1764  000FEE  ECA8  F00A         	call	_putch
  1765  000FF2  EF48  F008         	goto	l906
  1766  000FF6                     l1331:
  1767  000FF6  EE20 F004          	lfsr	2,4
  1768  000FFA  5003               	movf	fputc@fp^0,w,c
  1769  000FFC  26D9               	addwf	fsr2l,f,c
  1770  000FFE  5004               	movf	(fputc@fp+1)^0,w,c
  1771  001000  22DA               	addwfc	fsr2h,f,c
  1772  001002  50DE               	movf	postinc2,w,c
  1773  001004  10DE               	iorwf	postinc2,w,c
  1774  001006  B4D8               	btfsc	status,2,c
  1775  001008  EF08  F008         	goto	u561
  1776  00100C  EF0A  F008         	goto	u560
  1777  001010                     u561:
  1778  001010  EF25  F008         	goto	l1335
  1779  001014                     u560:
  1780  001014  EE20 F004          	lfsr	2,4
  1781  001018  5003               	movf	fputc@fp^0,w,c
  1782  00101A  26D9               	addwf	fsr2l,f,c
  1783  00101C  5004               	movf	(fputc@fp+1)^0,w,c
  1784  00101E  22DA               	addwfc	fsr2h,f,c
  1785  001020  EE10 F002          	lfsr	1,2
  1786  001024  5003               	movf	fputc@fp^0,w,c
  1787  001026  26E1               	addwf	fsr1l,f,c
  1788  001028  5004               	movf	(fputc@fp+1)^0,w,c
  1789  00102A  22E2               	addwfc	fsr1h,f,c
  1790  00102C  50DE               	movf	postinc2,w,c
  1791  00102E  5CE6               	subwf	postinc1,w,c
  1792  001030  50E6               	movf	postinc1,w,c
  1793  001032  0A80               	xorlw	128
  1794  001034  6E09               	movwf	(??_fputc+4)^0,c
  1795  001036  50DE               	movf	postinc2,w,c
  1796  001038  0A80               	xorlw	128
  1797  00103A  5809               	subwfb	(??_fputc+4)^0,w,c
  1798  00103C  B0D8               	btfsc	status,0,c
  1799  00103E  EF23  F008         	goto	u571
  1800  001042  EF25  F008         	goto	u570
  1801  001046                     u571:
  1802  001046  EF48  F008         	goto	l906
  1803  00104A                     u570:
  1804  00104A                     l1335:
  1805  00104A  EE20 F002          	lfsr	2,2
  1806  00104E  5003               	movf	fputc@fp^0,w,c
  1807  001050  26D9               	addwf	fsr2l,f,c
  1808  001052  5004               	movf	(fputc@fp+1)^0,w,c
  1809  001054  22DA               	addwfc	fsr2h,f,c
  1810  001056  CFDE F005          	movff	postinc2,??_fputc
  1811  00105A  CFDD F006          	movff	postdec2,??_fputc+1
  1812  00105E  C003  FFD9         	movff	fputc@fp,fsr2l
  1813  001062  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1814  001066  CFDE F007          	movff	postinc2,??_fputc+2
  1815  00106A  CFDD F008          	movff	postdec2,??_fputc+3
  1816  00106E  5005               	movf	??_fputc^0,w,c
  1817  001070  2407               	addwf	(??_fputc+2)^0,w,c
  1818  001072  6ED9               	movwf	fsr2l,c
  1819  001074  5006               	movf	(??_fputc+1)^0,w,c
  1820  001076  2008               	addwfc	(??_fputc+3)^0,w,c
  1821  001078  6EDA               	movwf	fsr2h,c
  1822  00107A  C001  FFDF         	movff	fputc@c,indf2
  1823  00107E  EE20 F002          	lfsr	2,2
  1824  001082  5003               	movf	fputc@fp^0,w,c
  1825  001084  26D9               	addwf	fsr2l,f,c
  1826  001086  5004               	movf	(fputc@fp+1)^0,w,c
  1827  001088  22DA               	addwfc	fsr2h,f,c
  1828  00108A  2ADE               	incf	postinc2,f,c
  1829  00108C  0E00               	movlw	0
  1830  00108E  22DD               	addwfc	postdec2,f,c
  1831  001090                     l906:
  1832  001090  0012               	return		;funcret
  1833  001092                     __end_of_fputc:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _putch *****************
  1837 ;; Defined at:
  1838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  c               1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  c               1    0[COMRAM] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_fputc
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text9
  1866  001550                     __ptext9:
  1867                           	callstack 0
  1868  001550                     _putch:
  1869                           	callstack 23
  1870  001550  0012               	return		;funcret
  1871  001552                     __end_of_putch:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function ___lomod *****************
  1875 ;; Defined at:
  1876 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  dividend        8    0[COMRAM] unsigned long long 
  1879 ;;  divisor         8    8[COMRAM] unsigned long long 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  counter         1   16[COMRAM] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  8    0[COMRAM] unsigned long long 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1891 ;;      Params:        16       0       0       0       0       0       0       0       0
  1892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1894 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1895 ;;Total ram usage:       17 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_utoa
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text10
  1905  000EF8                     __ptext10:
  1906                           	callstack 0
  1907  000EF8                     ___lomod:
  1908                           	callstack 26
  1909  000EF8  5009               	movf	___lomod@divisor^0,w,c
  1910  000EFA  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  1911  000EFC  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  1912  000EFE  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  1913  000F00  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  1914  000F02  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  1915  000F04  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  1916  000F06  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  1917  000F08  B4D8               	btfsc	status,2,c
  1918  000F0A  EF89  F007         	goto	u641
  1919  000F0E  EF8B  F007         	goto	u640
  1920  000F12                     u641:
  1921  000F12  EFD3  F007         	goto	l562
  1922  000F16                     u640:
  1923  000F16  0E01               	movlw	1
  1924  000F18  6E11               	movwf	___lomod@counter^0,c
  1925  000F1A  EF99  F007         	goto	l1385
  1926  000F1E                     l1383:
  1927  000F1E  90D8               	bcf	status,0,c
  1928  000F20  3609               	rlcf	___lomod@divisor^0,f,c
  1929  000F22  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  1930  000F24  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  1931  000F26  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  1932  000F28  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  1933  000F2A  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  1934  000F2C  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  1935  000F2E  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  1936  000F30  2A11               	incf	___lomod@counter^0,f,c
  1937  000F32                     l1385:
  1938  000F32  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  1939  000F34  EF9E  F007         	goto	u651
  1940  000F38  EFA0  F007         	goto	u650
  1941  000F3C                     u651:
  1942  000F3C  EF8F  F007         	goto	l1383
  1943  000F40                     u650:
  1944  000F40                     l1387:
  1945  000F40  5009               	movf	___lomod@divisor^0,w,c
  1946  000F42  5C01               	subwf	___lomod@dividend^0,w,c
  1947  000F44  500A               	movf	(___lomod@divisor+1)^0,w,c
  1948  000F46  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  1949  000F48  500B               	movf	(___lomod@divisor+2)^0,w,c
  1950  000F4A  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  1951  000F4C  500C               	movf	(___lomod@divisor+3)^0,w,c
  1952  000F4E  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  1953  000F50  500D               	movf	(___lomod@divisor+4)^0,w,c
  1954  000F52  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  1955  000F54  500E               	movf	(___lomod@divisor+5)^0,w,c
  1956  000F56  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  1957  000F58  500F               	movf	(___lomod@divisor+6)^0,w,c
  1958  000F5A  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  1959  000F5C  5010               	movf	(___lomod@divisor+7)^0,w,c
  1960  000F5E  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  1961  000F60  A0D8               	btfss	status,0,c
  1962  000F62  EFB5  F007         	goto	u661
  1963  000F66  EFB7  F007         	goto	u660
  1964  000F6A                     u661:
  1965  000F6A  EFC7  F007         	goto	l1391
  1966  000F6E                     u660:
  1967  000F6E  5009               	movf	___lomod@divisor^0,w,c
  1968  000F70  5E01               	subwf	___lomod@dividend^0,f,c
  1969  000F72  500A               	movf	(___lomod@divisor+1)^0,w,c
  1970  000F74  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  1971  000F76  500B               	movf	(___lomod@divisor+2)^0,w,c
  1972  000F78  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  1973  000F7A  500C               	movf	(___lomod@divisor+3)^0,w,c
  1974  000F7C  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  1975  000F7E  500D               	movf	(___lomod@divisor+4)^0,w,c
  1976  000F80  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  1977  000F82  500E               	movf	(___lomod@divisor+5)^0,w,c
  1978  000F84  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  1979  000F86  500F               	movf	(___lomod@divisor+6)^0,w,c
  1980  000F88  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  1981  000F8A  5010               	movf	(___lomod@divisor+7)^0,w,c
  1982  000F8C  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  1983  000F8E                     l1391:
  1984  000F8E  90D8               	bcf	status,0,c
  1985  000F90  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  1986  000F92  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  1987  000F94  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  1988  000F96  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  1989  000F98  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  1990  000F9A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  1991  000F9C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  1992  000F9E  3209               	rrcf	___lomod@divisor^0,f,c
  1993  000FA0  2E11               	decfsz	___lomod@counter^0,f,c
  1994  000FA2  EFA0  F007         	goto	l1387
  1995  000FA6                     l562:
  1996  000FA6  C001  F001         	movff	___lomod@dividend,?___lomod
  1997  000FAA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  1998  000FAE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  1999  000FB2  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2000  000FB6  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2001  000FBA  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2002  000FBE  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2003  000FC2  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2004  000FC6  0012               	return		;funcret
  2005  000FC8                     __end_of___lomod:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function ___lodiv *****************
  2009 ;; Defined at:
  2010 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  dividend        8    0[COMRAM] unsigned long long 
  2013 ;;  divisor         8    8[COMRAM] unsigned long long 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  quotient        8   16[COMRAM] unsigned long long 
  2016 ;;  counter         1   24[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  8    0[COMRAM] unsigned long long 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:        16       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2029 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:       25 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_utoa
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text11
  2040  000D26                     __ptext11:
  2041                           	callstack 0
  2042  000D26                     ___lodiv:
  2043                           	callstack 26
  2044  000D26  EE20  F011         	lfsr	2,___lodiv@quotient
  2045  000D2A  0E07               	movlw	7
  2046  000D2C                     u601:
  2047  000D2C  6ADE               	clrf	postinc2,c
  2048  000D2E  06E8               	decf	wreg,f,c
  2049  000D30  E2FD               	bc	u601
  2050  000D32  5009               	movf	___lodiv@divisor^0,w,c
  2051  000D34  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2052  000D36  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2053  000D38  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2054  000D3A  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2055  000D3C  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2056  000D3E  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2057  000D40  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2058  000D42  B4D8               	btfsc	status,2,c
  2059  000D44  EFA6  F006         	goto	u611
  2060  000D48  EFA8  F006         	goto	u610
  2061  000D4C                     u611:
  2062  000D4C  EFFA  F006         	goto	l552
  2063  000D50                     u610:
  2064  000D50  0E01               	movlw	1
  2065  000D52  6E19               	movwf	___lodiv@counter^0,c
  2066  000D54  EFB6  F006         	goto	l1365
  2067  000D58                     l1363:
  2068  000D58  90D8               	bcf	status,0,c
  2069  000D5A  3609               	rlcf	___lodiv@divisor^0,f,c
  2070  000D5C  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2071  000D5E  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2072  000D60  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2073  000D62  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2074  000D64  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2075  000D66  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2076  000D68  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2077  000D6A  2A19               	incf	___lodiv@counter^0,f,c
  2078  000D6C                     l1365:
  2079  000D6C  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2080  000D6E  EFBB  F006         	goto	u621
  2081  000D72  EFBD  F006         	goto	u620
  2082  000D76                     u621:
  2083  000D76  EFAC  F006         	goto	l1363
  2084  000D7A                     u620:
  2085  000D7A                     l1367:
  2086  000D7A  90D8               	bcf	status,0,c
  2087  000D7C  3611               	rlcf	___lodiv@quotient^0,f,c
  2088  000D7E  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2089  000D80  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2090  000D82  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2091  000D84  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2092  000D86  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2093  000D88  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2094  000D8A  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2095  000D8C  5009               	movf	___lodiv@divisor^0,w,c
  2096  000D8E  5C01               	subwf	___lodiv@dividend^0,w,c
  2097  000D90  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2098  000D92  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2099  000D94  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2100  000D96  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2101  000D98  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2102  000D9A  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2103  000D9C  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2104  000D9E  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2105  000DA0  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2106  000DA2  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2107  000DA4  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2108  000DA6  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2109  000DA8  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2110  000DAA  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2111  000DAC  A0D8               	btfss	status,0,c
  2112  000DAE  EFDB  F006         	goto	u631
  2113  000DB2  EFDD  F006         	goto	u630
  2114  000DB6                     u631:
  2115  000DB6  EFEE  F006         	goto	l1375
  2116  000DBA                     u630:
  2117  000DBA  5009               	movf	___lodiv@divisor^0,w,c
  2118  000DBC  5E01               	subwf	___lodiv@dividend^0,f,c
  2119  000DBE  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2120  000DC0  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2121  000DC2  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2122  000DC4  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2123  000DC6  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2124  000DC8  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2125  000DCA  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2126  000DCC  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2127  000DCE  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2128  000DD0  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2129  000DD2  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2130  000DD4  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2131  000DD6  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2132  000DD8  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2133  000DDA  8011               	bsf	___lodiv@quotient^0,0,c
  2134  000DDC                     l1375:
  2135  000DDC  90D8               	bcf	status,0,c
  2136  000DDE  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2137  000DE0  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2138  000DE2  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2139  000DE4  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2140  000DE6  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2141  000DE8  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2142  000DEA  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2143  000DEC  3209               	rrcf	___lodiv@divisor^0,f,c
  2144  000DEE  2E19               	decfsz	___lodiv@counter^0,f,c
  2145  000DF0  EFBD  F006         	goto	l1367
  2146  000DF4                     l552:
  2147  000DF4  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2148  000DF8  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2149  000DFC  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2150  000E00  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2151  000E04  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2152  000E08  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2153  000E0C  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2154  000E10  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2155  000E14  0012               	return		;funcret
  2156  000E16                     __end_of___lodiv:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _atoi *****************
  2160 ;; Defined at:
  2161 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2164 ;;		 -> buffer_rx(10), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  n               2   20[COMRAM] int 
  2167 ;;  neg             2   13[COMRAM] int 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2    7[COMRAM] int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2177 ;;      Params:         2       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2180 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:       15 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 1
  2184 ;; This function calls:
  2185 ;;		___wmul
  2186 ;;		_isdigit
  2187 ;;		_isspace
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text12
  2194  000B9C                     __ptext12:
  2195                           	callstack 0
  2196  000B9C                     _atoi:
  2197                           	callstack 29
  2198  000B9C  0E00               	movlw	0
  2199  000B9E  6E16               	movwf	(atoi@n+1)^0,c
  2200  000BA0  0E00               	movlw	0
  2201  000BA2  6E15               	movwf	atoi@n^0,c
  2202  000BA4  0E00               	movlw	0
  2203  000BA6  6E0F               	movwf	(atoi@neg+1)^0,c
  2204  000BA8  0E00               	movlw	0
  2205  000BAA  6E0E               	movwf	atoi@neg^0,c
  2206  000BAC  EFDA  F005         	goto	l1599
  2207  000BB0                     l1597:
  2208  000BB0  4A08               	infsnz	atoi@s^0,f,c
  2209  000BB2  2A09               	incf	(atoi@s+1)^0,f,c
  2210  000BB4                     l1599:
  2211  000BB4  0E01               	movlw	1
  2212  000BB6  6E14               	movwf	_atoi$945^0,c
  2213  000BB8  C008  FFD9         	movff	atoi@s,fsr2l
  2214  000BBC  C009  FFDA         	movff	atoi@s+1,fsr2h
  2215  000BC0  0E20               	movlw	32
  2216  000BC2  18DE               	xorwf	postinc2,w,c
  2217  000BC4  B4D8               	btfsc	status,2,c
  2218  000BC6  EFE7  F005         	goto	u961
  2219  000BCA  EFE9  F005         	goto	u960
  2220  000BCE                     u961:
  2221  000BCE  EF05  F006         	goto	l1607
  2222  000BD2                     u960:
  2223  000BD2  0EF7               	movlw	247
  2224  000BD4  6E0A               	movwf	??_atoi^0,c
  2225  000BD6  0EFF               	movlw	255
  2226  000BD8  6E0B               	movwf	(??_atoi+1)^0,c
  2227  000BDA  C008  FFD9         	movff	atoi@s,fsr2l
  2228  000BDE  C009  FFDA         	movff	atoi@s+1,fsr2h
  2229  000BE2  50DF               	movf	indf2,w,c
  2230  000BE4  6E0C               	movwf	(??_atoi+2)^0,c
  2231  000BE6  6A0D               	clrf	(??_atoi+3)^0,c
  2232  000BE8  500A               	movf	??_atoi^0,w,c
  2233  000BEA  260C               	addwf	(??_atoi+2)^0,f,c
  2234  000BEC  500B               	movf	(??_atoi+1)^0,w,c
  2235  000BEE  220D               	addwfc	(??_atoi+3)^0,f,c
  2236  000BF0  500D               	movf	(??_atoi+3)^0,w,c
  2237  000BF2  E109               	bnz	u970
  2238  000BF4  0E05               	movlw	5
  2239  000BF6  5C0C               	subwf	(??_atoi+2)^0,w,c
  2240  000BF8  A0D8               	btfss	status,0,c
  2241  000BFA  EF01  F006         	goto	u971
  2242  000BFE  EF03  F006         	goto	u970
  2243  000C02                     u971:
  2244  000C02  EF05  F006         	goto	l1607
  2245  000C06                     u970:
  2246  000C06  0E00               	movlw	0
  2247  000C08  6E14               	movwf	_atoi$945^0,c
  2248  000C0A                     l1607:
  2249  000C0A  C014  F010         	movff	_atoi$945,_atoi$944
  2250  000C0E  6A11               	clrf	(_atoi$944+1)^0,c
  2251  000C10  5010               	movf	_atoi$944^0,w,c
  2252  000C12  1011               	iorwf	(_atoi$944+1)^0,w,c
  2253  000C14  A4D8               	btfss	status,2,c
  2254  000C16  EF0F  F006         	goto	u981
  2255  000C1A  EF11  F006         	goto	u980
  2256  000C1E                     u981:
  2257  000C1E  EFD8  F005         	goto	l1597
  2258  000C22                     u980:
  2259  000C22  EF1B  F006         	goto	l1617
  2260  000C26                     l1613:
  2261  000C26  0E00               	movlw	0
  2262  000C28  6E0F               	movwf	(atoi@neg+1)^0,c
  2263  000C2A  0E01               	movlw	1
  2264  000C2C  6E0E               	movwf	atoi@neg^0,c
  2265  000C2E                     l1615:
  2266  000C2E  4A08               	infsnz	atoi@s^0,f,c
  2267  000C30  2A09               	incf	(atoi@s+1)^0,f,c
  2268  000C32  EF50  F006         	goto	l1623
  2269  000C36                     l1617:
  2270  000C36  C008  FFD9         	movff	atoi@s,fsr2l
  2271  000C3A  C009  FFDA         	movff	atoi@s+1,fsr2h
  2272  000C3E  50DF               	movf	indf2,w,c
  2273  000C40  6E0A               	movwf	??_atoi^0,c
  2274  000C42  6A0B               	clrf	(??_atoi+1)^0,c
  2275                           
  2276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 1, Range of values is 0 to 0
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte            4     3 (average)
  2282                           ;	Chosen strategy is simple_byte
  2283  000C44  500B               	movf	(??_atoi+1)^0,w,c
  2284  000C46  0A00               	xorlw	0	; case 0
  2285  000C48  B4D8               	btfsc	status,2,c
  2286  000C4A  EF29  F006         	goto	l1727
  2287  000C4E  EF50  F006         	goto	l1623
  2288  000C52                     l1727:
  2289                           
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 2, Range of values is 43 to 45
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte            7     4 (average)
  2295                           ;	Chosen strategy is simple_byte
  2296  000C52  500A               	movf	??_atoi^0,w,c
  2297  000C54  0A2B               	xorlw	43	; case 43
  2298  000C56  B4D8               	btfsc	status,2,c
  2299  000C58  EF17  F006         	goto	l1615
  2300  000C5C  0A06               	xorlw	6	; case 45
  2301  000C5E  B4D8               	btfsc	status,2,c
  2302  000C60  EF13  F006         	goto	l1613
  2303  000C64  EF50  F006         	goto	l1623
  2304  000C68                     l1619:
  2305  000C68  C015  F001         	movff	atoi@n,___wmul@multiplier
  2306  000C6C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2307  000C70  0E00               	movlw	0
  2308  000C72  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2309  000C74  0E0A               	movlw	10
  2310  000C76  6E03               	movwf	___wmul@multiplicand^0,c
  2311  000C78  EC76  F00A         	call	___wmul	;wreg free
  2312  000C7C  C008  FFD9         	movff	atoi@s,fsr2l
  2313  000C80  C009  FFDA         	movff	atoi@s+1,fsr2h
  2314  000C84  50DF               	movf	indf2,w,c
  2315  000C86  6E0A               	movwf	??_atoi^0,c
  2316  000C88  500A               	movf	??_atoi^0,w,c
  2317  000C8A  5E01               	subwf	?___wmul^0,f,c
  2318  000C8C  0E00               	movlw	0
  2319  000C8E  5A02               	subwfb	(?___wmul+1)^0,f,c
  2320  000C90  0E30               	movlw	48
  2321  000C92  2401               	addwf	?___wmul^0,w,c
  2322  000C94  6E15               	movwf	atoi@n^0,c
  2323  000C96  0E00               	movlw	0
  2324  000C98  2002               	addwfc	(?___wmul+1)^0,w,c
  2325  000C9A  6E16               	movwf	(atoi@n+1)^0,c
  2326  000C9C  EF17  F006         	goto	l1615
  2327  000CA0                     l1623:
  2328  000CA0  0ED0               	movlw	208
  2329  000CA2  6E0A               	movwf	??_atoi^0,c
  2330  000CA4  0EFF               	movlw	255
  2331  000CA6  6E0B               	movwf	(??_atoi+1)^0,c
  2332  000CA8  C008  FFD9         	movff	atoi@s,fsr2l
  2333  000CAC  C009  FFDA         	movff	atoi@s+1,fsr2h
  2334  000CB0  50DF               	movf	indf2,w,c
  2335  000CB2  6E0C               	movwf	(??_atoi+2)^0,c
  2336  000CB4  6A0D               	clrf	(??_atoi+3)^0,c
  2337  000CB6  500A               	movf	??_atoi^0,w,c
  2338  000CB8  260C               	addwf	(??_atoi+2)^0,f,c
  2339  000CBA  500B               	movf	(??_atoi+1)^0,w,c
  2340  000CBC  220D               	addwfc	(??_atoi+3)^0,f,c
  2341  000CBE  500D               	movf	(??_atoi+3)^0,w,c
  2342  000CC0  E10A               	bnz	u990
  2343  000CC2  0E0A               	movlw	10
  2344  000CC4  5C0C               	subwf	(??_atoi+2)^0,w,c
  2345  000CC6  A0D8               	btfss	status,0,c
  2346  000CC8  EF68  F006         	goto	u991
  2347  000CCC  EF6B  F006         	goto	u990
  2348  000CD0                     u991:
  2349  000CD0  0E01               	movlw	1
  2350  000CD2  EF6C  F006         	goto	u1000
  2351  000CD6                     u990:
  2352  000CD6  0E00               	movlw	0
  2353  000CD8                     u1000:
  2354  000CD8  6E12               	movwf	_atoi$946^0,c
  2355  000CDA  6A13               	clrf	(_atoi$946+1)^0,c
  2356  000CDC  5012               	movf	_atoi$946^0,w,c
  2357  000CDE  1013               	iorwf	(_atoi$946+1)^0,w,c
  2358  000CE0  A4D8               	btfss	status,2,c
  2359  000CE2  EF75  F006         	goto	u1011
  2360  000CE6  EF77  F006         	goto	u1010
  2361  000CEA                     u1011:
  2362  000CEA  EF34  F006         	goto	l1619
  2363  000CEE                     u1010:
  2364  000CEE  500E               	movf	atoi@neg^0,w,c
  2365  000CF0  100F               	iorwf	(atoi@neg+1)^0,w,c
  2366  000CF2  A4D8               	btfss	status,2,c
  2367  000CF4  EF7E  F006         	goto	u1021
  2368  000CF8  EF80  F006         	goto	u1020
  2369  000CFC                     u1021:
  2370  000CFC  EF8E  F006         	goto	l813
  2371  000D00                     u1020:
  2372  000D00  C015  F00A         	movff	atoi@n,??_atoi
  2373  000D04  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2374  000D08  1E0A               	comf	??_atoi^0,f,c
  2375  000D0A  1E0B               	comf	(??_atoi+1)^0,f,c
  2376  000D0C  4A0A               	infsnz	??_atoi^0,f,c
  2377  000D0E  2A0B               	incf	(??_atoi+1)^0,f,c
  2378  000D10  C00A  F008         	movff	??_atoi,?_atoi
  2379  000D14  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2380  000D18  EF92  F006         	goto	l816
  2381  000D1C                     l813:
  2382  000D1C  C015  F008         	movff	atoi@n,?_atoi
  2383  000D20  C016  F009         	movff	atoi@n+1,?_atoi+1
  2384  000D24                     l816:
  2385  000D24  0012               	return		;funcret
  2386  000D26                     __end_of_atoi:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _isspace *****************
  2390 ;; Defined at:
  2391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  c               2    0[COMRAM] int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    0[COMRAM] int 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         2       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        7 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_atoi
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text13
  2419  00138A                     __ptext13:
  2420                           	callstack 0
  2421  00138A                     _isspace:
  2422                           	callstack 29
  2423  00138A  0E01               	movlw	1
  2424  00138C  6E07               	movwf	_isspace$962^0,c
  2425  00138E  0E20               	movlw	32
  2426  001390  1801               	xorwf	isspace@c^0,w,c
  2427  001392  1002               	iorwf	(isspace@c+1)^0,w,c
  2428  001394  B4D8               	btfsc	status,2,c
  2429  001396  EFCF  F009         	goto	u871
  2430  00139A  EFD1  F009         	goto	u870
  2431  00139E                     u871:
  2432  00139E  EFEA  F009         	goto	l1541
  2433  0013A2                     u870:
  2434  0013A2  0EF7               	movlw	247
  2435  0013A4  6E03               	movwf	??_isspace^0,c
  2436  0013A6  0EFF               	movlw	255
  2437  0013A8  6E04               	movwf	(??_isspace+1)^0,c
  2438  0013AA  C001  F005         	movff	isspace@c,??_isspace+2
  2439  0013AE  C002  F006         	movff	isspace@c+1,??_isspace+3
  2440  0013B2  5003               	movf	??_isspace^0,w,c
  2441  0013B4  2605               	addwf	(??_isspace+2)^0,f,c
  2442  0013B6  5004               	movf	(??_isspace+1)^0,w,c
  2443  0013B8  2206               	addwfc	(??_isspace+3)^0,f,c
  2444  0013BA  5006               	movf	(??_isspace+3)^0,w,c
  2445  0013BC  E109               	bnz	u880
  2446  0013BE  0E05               	movlw	5
  2447  0013C0  5C05               	subwf	(??_isspace+2)^0,w,c
  2448  0013C2  A0D8               	btfss	status,0,c
  2449  0013C4  EFE6  F009         	goto	u881
  2450  0013C8  EFE8  F009         	goto	u880
  2451  0013CC                     u881:
  2452  0013CC  EFEA  F009         	goto	l1541
  2453  0013D0                     u880:
  2454  0013D0  0E00               	movlw	0
  2455  0013D2  6E07               	movwf	_isspace$962^0,c
  2456  0013D4                     l1541:
  2457  0013D4  C007  F001         	movff	_isspace$962,?_isspace
  2458  0013D8  6A02               	clrf	(?_isspace+1)^0,c
  2459  0013DA  0012               	return		;funcret
  2460  0013DC                     __end_of_isspace:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _isdigit *****************
  2464 ;; Defined at:
  2465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  c               2    0[COMRAM] int 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2    0[COMRAM] int 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2479 ;;      Params:         2       0       0       0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2481 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2482 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2483 ;;Total ram usage:        6 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_atoi
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text14
  2493  001420                     __ptext14:
  2494                           	callstack 0
  2495  001420                     _isdigit:
  2496                           	callstack 29
  2497  001420  0ED0               	movlw	208
  2498  001422  6E03               	movwf	??_isdigit^0,c
  2499  001424  0EFF               	movlw	255
  2500  001426  6E04               	movwf	(??_isdigit+1)^0,c
  2501  001428  C001  F005         	movff	isdigit@c,??_isdigit+2
  2502  00142C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2503  001430  5003               	movf	??_isdigit^0,w,c
  2504  001432  2605               	addwf	(??_isdigit+2)^0,f,c
  2505  001434  5004               	movf	(??_isdigit+1)^0,w,c
  2506  001436  2206               	addwfc	(??_isdigit+3)^0,f,c
  2507  001438  5006               	movf	(??_isdigit+3)^0,w,c
  2508  00143A  E10A               	bnz	u890
  2509  00143C  0E0A               	movlw	10
  2510  00143E  5C05               	subwf	(??_isdigit+2)^0,w,c
  2511  001440  A0D8               	btfss	status,0,c
  2512  001442  EF25  F00A         	goto	u891
  2513  001446  EF28  F00A         	goto	u890
  2514  00144A                     u891:
  2515  00144A  0E01               	movlw	1
  2516  00144C  EF29  F00A         	goto	u900
  2517  001450                     u890:
  2518  001450  0E00               	movlw	0
  2519  001452                     u900:
  2520  001452  6E01               	movwf	?_isdigit^0,c
  2521  001454  6A02               	clrf	(?_isdigit+1)^0,c
  2522  001456  0012               	return		;funcret
  2523  001458                     __end_of_isdigit:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function ___wmul *****************
  2527 ;; Defined at:
  2528 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  multiplier      2    0[COMRAM] unsigned int 
  2531 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  product         2    4[COMRAM] unsigned int 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMRAM] unsigned int 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, prodl, prodh
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         4       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2546 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:        6 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_atoi
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text15
  2557  0014EC                     __ptext15:
  2558                           	callstack 0
  2559  0014EC                     ___wmul:
  2560                           	callstack 29
  2561  0014EC  5001               	movf	___wmul@multiplier^0,w,c
  2562  0014EE  0203               	mulwf	___wmul@multiplicand^0,c
  2563  0014F0  CFF3 F005          	movff	prodl,___wmul@product
  2564  0014F4  CFF4 F006          	movff	prodh,___wmul@product+1
  2565  0014F8  5001               	movf	___wmul@multiplier^0,w,c
  2566  0014FA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2567  0014FC  50F3               	movf	243,w,c
  2568  0014FE  2606               	addwf	(___wmul@product+1)^0,f,c
  2569  001500  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2570  001502  0203               	mulwf	___wmul@multiplicand^0,c
  2571  001504  50F3               	movf	243,w,c
  2572  001506  2606               	addwf	(___wmul@product+1)^0,f,c
  2573  001508  C005  F001         	movff	___wmul@product,?___wmul
  2574  00150C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2575  001510  0012               	return		;funcret
  2576  001512                     __end_of___wmul:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _Uart_Send_String *****************
  2580 ;; Defined at:
  2581 ;;		line 35 in file "uart.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  info            2    1[COMRAM] PTR unsigned char 
  2584 ;;		 -> buffer_tx(10), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2596 ;;      Params:         2       0       0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2599 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 1
  2603 ;; This function calls:
  2604 ;;		_Uart_Send_Char
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text16
  2611  00148E                     __ptext16:
  2612                           	callstack 0
  2613  00148E                     _Uart_Send_String:
  2614                           	callstack 29
  2615  00148E                     
  2616                           ;uart.c: 35: void Uart_Send_String(char *info);uart.c: 36: {;uart.c: 37:     while(*info
      +                          )
  2617  00148E  EF52  F00A         	goto	l1575
  2618  001492                     l1571:
  2619                           
  2620                           ;uart.c: 38:     {;uart.c: 39:         Uart_Send_Char(*info++);
  2621  001492  C002  FFD9         	movff	Uart_Send_String@info,fsr2l
  2622  001496  C003  FFDA         	movff	Uart_Send_String@info+1,fsr2h
  2623  00149A  50DF               	movf	indf2,w,c
  2624  00149C  EC9C  F00A         	call	_Uart_Send_Char
  2625  0014A0  4A02               	infsnz	Uart_Send_String@info^0,f,c
  2626  0014A2  2A03               	incf	(Uart_Send_String@info+1)^0,f,c
  2627  0014A4                     l1575:
  2628                           
  2629                           ;uart.c: 37:     while(*info)
  2630  0014A4  C002  FFD9         	movff	Uart_Send_String@info,fsr2l
  2631  0014A8  C003  FFDA         	movff	Uart_Send_String@info+1,fsr2h
  2632  0014AC  50DF               	movf	indf2,w,c
  2633  0014AE  A4D8               	btfss	status,2,c
  2634  0014B0  EF5C  F00A         	goto	u931
  2635  0014B4  EF5E  F00A         	goto	u930
  2636  0014B8                     u931:
  2637  0014B8  EF49  F00A         	goto	l1571
  2638  0014BC                     u930:
  2639  0014BC  0012               	return		;funcret
  2640  0014BE                     __end_of_Uart_Send_String:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _Uart_Send_Char *****************
  2644 ;; Defined at:
  2645 ;;		line 29 in file "uart.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  txData          1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  txData          1    0[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_Uart_Send_String
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text17
  2673  001538                     __ptext17:
  2674                           	callstack 0
  2675  001538                     _Uart_Send_Char:
  2676                           	callstack 29
  2677                           
  2678                           ;incstack = 0
  2679                           ;Uart_Send_Char@txData stored from wreg
  2680  001538  6E01               	movwf	Uart_Send_Char@txData^0,c
  2681  00153A                     l33:
  2682  00153A  A2AC               	btfss	172,1,c	;volatile
  2683  00153C  EFA2  F00A         	goto	u811
  2684  001540  EFA4  F00A         	goto	u810
  2685  001544                     u811:
  2686  001544  EF9D  F00A         	goto	l33
  2687  001548                     u810:
  2688  001548                     
  2689                           ;uart.c: 32:     TXREG = txData;
  2690  001548  C001  FFAD         	movff	Uart_Send_Char@txData,4013	;volatile
  2691  00154C  0012               	return		;funcret
  2692  00154E                     __end_of_Uart_Send_Char:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _Uart_Read_String *****************
  2696 ;; Defined at:
  2697 ;;		line 55 in file "uart.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  Buf             2    0[COMRAM] PTR unsigned char 
  2700 ;;		 -> buffer_rx(10), 
  2701 ;;  s_buf           2    2[COMRAM] unsigned int 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  cont_buf        2    7[COMRAM] unsigned int 
  2704 ;;  c               1    6[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         4       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        9 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 1
  2721 ;; This function calls:
  2722 ;;		_Uart_Read
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text18
  2729  00126A                     __ptext18:
  2730                           	callstack 0
  2731  00126A                     _Uart_Read_String:
  2732                           	callstack 29
  2733  00126A                     
  2734                           ;uart.c: 55: void Uart_Read_String(char* Buf, unsigned int s_buf);uart.c: 56: {;uart.c: 
      +                          57:     unsigned int cont_buf = 0;
  2735  00126A  0E00               	movlw	0
  2736  00126C  6E09               	movwf	(Uart_Read_String@cont_buf+1)^0,c
  2737  00126E  0E00               	movlw	0
  2738  001270  6E08               	movwf	Uart_Read_String@cont_buf^0,c
  2739  001272                     l1579:
  2740                           
  2741                           ;uart.c: 60:     {;uart.c: 61:         c = Uart_Read();
  2742  001272  EC89  F00A         	call	_Uart_Read	;wreg free
  2743  001276  6E07               	movwf	Uart_Read_String@c^0,c
  2744  001278                     
  2745                           ;uart.c: 62:         Buf[cont_buf++] = c;
  2746  001278  5008               	movf	Uart_Read_String@cont_buf^0,w,c
  2747  00127A  2401               	addwf	Uart_Read_String@Buf^0,w,c
  2748  00127C  6ED9               	movwf	fsr2l,c
  2749  00127E  5009               	movf	(Uart_Read_String@cont_buf+1)^0,w,c
  2750  001280  2002               	addwfc	(Uart_Read_String@Buf+1)^0,w,c
  2751  001282  6EDA               	movwf	fsr2h,c
  2752  001284  C007  FFDF         	movff	Uart_Read_String@c,indf2
  2753  001288  4A08               	infsnz	Uart_Read_String@cont_buf^0,f,c
  2754  00128A  2A09               	incf	(Uart_Read_String@cont_buf+1)^0,f,c
  2755  00128C                     
  2756                           ;uart.c: 63:         if(cont_buf >= s_buf) break;
  2757  00128C  5003               	movf	Uart_Read_String@s_buf^0,w,c
  2758  00128E  5C08               	subwf	Uart_Read_String@cont_buf^0,w,c
  2759  001290  5004               	movf	(Uart_Read_String@s_buf+1)^0,w,c
  2760  001292  5809               	subwfb	(Uart_Read_String@cont_buf+1)^0,w,c
  2761  001294  A0D8               	btfss	status,0,c
  2762  001296  EF4F  F009         	goto	u941
  2763  00129A  EF51  F009         	goto	u940
  2764  00129E                     u941:
  2765  00129E  EF53  F009         	goto	l1589
  2766  0012A2                     u940:
  2767  0012A2  EF5C  F009         	goto	l1591
  2768  0012A6                     l1589:
  2769                           
  2770                           ;uart.c: 64:     }while(c != '\n');
  2771  0012A6  0E0A               	movlw	10
  2772  0012A8  1807               	xorwf	Uart_Read_String@c^0,w,c
  2773  0012AA  A4D8               	btfss	status,2,c
  2774  0012AC  EF5A  F009         	goto	u951
  2775  0012B0  EF5C  F009         	goto	u950
  2776  0012B4                     u951:
  2777  0012B4  EF39  F009         	goto	l1579
  2778  0012B8                     u950:
  2779  0012B8                     l1591:
  2780                           
  2781                           ;uart.c: 65:     Buf[cont_buf-2] = '\0';
  2782  0012B8  5008               	movf	Uart_Read_String@cont_buf^0,w,c
  2783  0012BA  2401               	addwf	Uart_Read_String@Buf^0,w,c
  2784  0012BC  6E05               	movwf	??_Uart_Read_String^0,c
  2785  0012BE  5009               	movf	(Uart_Read_String@cont_buf+1)^0,w,c
  2786  0012C0  2002               	addwfc	(Uart_Read_String@Buf+1)^0,w,c
  2787  0012C2  6E06               	movwf	(??_Uart_Read_String+1)^0,c
  2788  0012C4  0EFE               	movlw	254
  2789  0012C6  2405               	addwf	??_Uart_Read_String^0,w,c
  2790  0012C8  6ED9               	movwf	fsr2l,c
  2791  0012CA  0EFF               	movlw	255
  2792  0012CC  2006               	addwfc	(??_Uart_Read_String+1)^0,w,c
  2793  0012CE  6EDA               	movwf	fsr2h,c
  2794  0012D0  0E00               	movlw	0
  2795  0012D2  6EDF               	movwf	indf2,c
  2796  0012D4  0012               	return		;funcret
  2797  0012D6                     __end_of_Uart_Read_String:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _Uart_Read *****************
  2801 ;; Defined at:
  2802 ;;		line 43 in file "uart.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      unsigned char 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_Uart_Read_String
  2826 ;;		_Uart_Read_StringUntil
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text19
  2831  001512                     __ptext19:
  2832                           	callstack 0
  2833  001512                     _Uart_Read:
  2834                           	callstack 29
  2835  001512                     l45:
  2836  001512  AA9E               	btfss	158,5,c	;volatile
  2837  001514  EF8E  F00A         	goto	u821
  2838  001518  EF90  F00A         	goto	u820
  2839  00151C                     u821:
  2840  00151C  EF89  F00A         	goto	l45
  2841  001520                     u820:
  2842  001520                     
  2843                           ;uart.c: 46:     if(RCSTAbits.OERR == 1)
  2844  001520  A2AB               	btfss	171,1,c	;volatile
  2845  001522  EF95  F00A         	goto	u831
  2846  001526  EF97  F00A         	goto	u830
  2847  00152A                     u831:
  2848  00152A  EF99  F00A         	goto	l48
  2849  00152E                     u830:
  2850  00152E                     
  2851                           ;uart.c: 47:     {;uart.c: 48:         RCSTAbits.CREN = 0;
  2852  00152E  98AB               	bcf	171,4,c	;volatile
  2853                           
  2854                           ;uart.c: 49:         RCSTAbits.CREN = 1;
  2855  001530  88AB               	bsf	171,4,c	;volatile
  2856  001532                     l48:
  2857                           
  2858                           ;uart.c: 51:     PIR1bits.RCIF = 0;
  2859  001532  9A9E               	bcf	158,5,c	;volatile
  2860  001534                     
  2861                           ;uart.c: 52:     return RCREG;
  2862  001534  50AE               	movf	174,w,c	;volatile
  2863  001536  0012               	return		;funcret
  2864  001538                     __end_of_Uart_Read:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _Uart_Init *****************
  2868 ;; Defined at:
  2869 ;;		line 11 in file "uart.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  baud            4   13[COMRAM] unsigned long 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  vx              2   21[COMRAM] unsigned int 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0
  2884 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2885 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2886 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2887 ;;Total ram usage:       10 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 1
  2890 ;; This function calls:
  2891 ;;		___lldiv
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text20
  2898  0011FC                     __ptext20:
  2899                           	callstack 0
  2900  0011FC                     _Uart_Init:
  2901                           	callstack 29
  2902  0011FC                     
  2903                           ;uart.c: 11: void Uart_Init(unsigned long baud);uart.c: 12: {;uart.c: 13:     TRISCbits.
      +                          RC6 = 0;
  2904  0011FC  9C94               	bcf	148,6,c	;volatile
  2905                           
  2906                           ;uart.c: 14:     TRISCbits.RC7 = 1;
  2907  0011FE  8E94               	bsf	148,7,c	;volatile
  2908  001200                     
  2909                           ;uart.c: 15:     TXSTA = 0x24;
  2910  001200  0E24               	movlw	36
  2911  001202  6EAC               	movwf	172,c	;volatile
  2912                           
  2913                           ;uart.c: 16:     RCSTA = 0x90;
  2914  001204  0E90               	movlw	144
  2915  001206  6EAB               	movwf	171,c	;volatile
  2916                           
  2917                           ;uart.c: 17:     BAUDCON = 0x00;
  2918  001208  0E00               	movlw	0
  2919  00120A  6EB8               	movwf	184,c	;volatile
  2920  00120C                     
  2921                           ;uart.c: 18:     BAUDCONbits.BRG16 = 1;
  2922  00120C  86B8               	bsf	184,3,c	;volatile
  2923  00120E                     
  2924                           ;uart.c: 19:     unsigned int vx = (48000000/(baud*4))-1;
  2925  00120E  0E00               	movlw	0
  2926  001210  6E01               	movwf	___lldiv@dividend^0,c
  2927  001212  0E6C               	movlw	108
  2928  001214  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2929  001216  0EDC               	movlw	220
  2930  001218  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2931  00121A  0E02               	movlw	2
  2932  00121C  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2933  00121E  C00E  F012         	movff	Uart_Init@baud,??_Uart_Init
  2934  001222  C00F  F013         	movff	Uart_Init@baud+1,??_Uart_Init+1
  2935  001226  C010  F014         	movff	Uart_Init@baud+2,??_Uart_Init+2
  2936  00122A  C011  F015         	movff	Uart_Init@baud+3,??_Uart_Init+3
  2937  00122E  0E02               	movlw	2
  2938  001230                     u925:
  2939  001230  90D8               	bcf	status,0,c
  2940  001232  3612               	rlcf	??_Uart_Init^0,f,c
  2941  001234  3613               	rlcf	(??_Uart_Init+1)^0,f,c
  2942  001236  3614               	rlcf	(??_Uart_Init+2)^0,f,c
  2943  001238  3615               	rlcf	(??_Uart_Init+3)^0,f,c
  2944  00123A  2EE8               	decfsz	wreg,f,c
  2945  00123C  EF18  F009         	goto	u925
  2946  001240  C012  F005         	movff	??_Uart_Init,___lldiv@divisor
  2947  001244  C013  F006         	movff	??_Uart_Init+1,___lldiv@divisor+1
  2948  001248  C014  F007         	movff	??_Uart_Init+2,___lldiv@divisor+2
  2949  00124C  C015  F008         	movff	??_Uart_Init+3,___lldiv@divisor+3
  2950  001250  ECAC  F008         	call	___lldiv	;wreg free
  2951  001254  0EFF               	movlw	255
  2952  001256  2401               	addwf	?___lldiv^0,w,c
  2953  001258  6E16               	movwf	Uart_Init@vx^0,c
  2954  00125A  0EFF               	movlw	255
  2955  00125C  2002               	addwfc	(?___lldiv+1)^0,w,c
  2956  00125E  6E17               	movwf	(Uart_Init@vx+1)^0,c
  2957  001260                     
  2958                           ;uart.c: 20:     SPBRG = vx & 0x00FF;
  2959  001260  C016  FFAF         	movff	Uart_Init@vx,4015	;volatile
  2960  001264                     
  2961                           ;uart.c: 21:     SPBRGH = vx >> 8;
  2962  001264  5017               	movf	(Uart_Init@vx+1)^0,w,c
  2963  001266  6EB0               	movwf	176,c	;volatile
  2964  001268  0012               	return		;funcret
  2965  00126A                     __end_of_Uart_Init:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function ___lldiv *****************
  2969 ;; Defined at:
  2970 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  dividend        4    0[COMRAM] unsigned long 
  2973 ;;  divisor         4    4[COMRAM] unsigned long 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  quotient        4    8[COMRAM] unsigned long 
  2976 ;;  counter         1   12[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  4    0[COMRAM] unsigned long 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2986 ;;      Params:         8       0       0       0       0       0       0       0       0
  2987 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2989 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2990 ;;Total ram usage:       13 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_Uart_Init
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text21
  3000  001158                     __ptext21:
  3001                           	callstack 0
  3002  001158                     ___lldiv:
  3003                           	callstack 29
  3004  001158  0E00               	movlw	0
  3005  00115A  6E09               	movwf	___lldiv@quotient^0,c
  3006  00115C  0E00               	movlw	0
  3007  00115E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3008  001160  0E00               	movlw	0
  3009  001162  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3010  001164  0E00               	movlw	0
  3011  001166  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3012  001168  5005               	movf	___lldiv@divisor^0,w,c
  3013  00116A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3014  00116C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3015  00116E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3016  001170  B4D8               	btfsc	status,2,c
  3017  001172  EFBD  F008         	goto	u841
  3018  001176  EFBF  F008         	goto	u840
  3019  00117A                     u841:
  3020  00117A  EFF5  F008         	goto	l141
  3021  00117E                     u840:
  3022  00117E  0E01               	movlw	1
  3023  001180  6E0D               	movwf	___lldiv@counter^0,c
  3024  001182  EFC9  F008         	goto	l1519
  3025  001186                     l1517:
  3026  001186  90D8               	bcf	status,0,c
  3027  001188  3605               	rlcf	___lldiv@divisor^0,f,c
  3028  00118A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3029  00118C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3030  00118E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3031  001190  2A0D               	incf	___lldiv@counter^0,f,c
  3032  001192                     l1519:
  3033  001192  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3034  001194  EFCE  F008         	goto	u851
  3035  001198  EFD0  F008         	goto	u850
  3036  00119C                     u851:
  3037  00119C  EFC3  F008         	goto	l1517
  3038  0011A0                     u850:
  3039  0011A0                     l1521:
  3040  0011A0  90D8               	bcf	status,0,c
  3041  0011A2  3609               	rlcf	___lldiv@quotient^0,f,c
  3042  0011A4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3043  0011A6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3044  0011A8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3045  0011AA  5005               	movf	___lldiv@divisor^0,w,c
  3046  0011AC  5C01               	subwf	___lldiv@dividend^0,w,c
  3047  0011AE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3048  0011B0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3049  0011B2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3050  0011B4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3051  0011B6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3052  0011B8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3053  0011BA  A0D8               	btfss	status,0,c
  3054  0011BC  EFE2  F008         	goto	u861
  3055  0011C0  EFE4  F008         	goto	u860
  3056  0011C4                     u861:
  3057  0011C4  EFED  F008         	goto	l1529
  3058  0011C8                     u860:
  3059  0011C8  5005               	movf	___lldiv@divisor^0,w,c
  3060  0011CA  5E01               	subwf	___lldiv@dividend^0,f,c
  3061  0011CC  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3062  0011CE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3063  0011D0  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3064  0011D2  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3065  0011D4  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3066  0011D6  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3067  0011D8  8009               	bsf	___lldiv@quotient^0,0,c
  3068  0011DA                     l1529:
  3069  0011DA  90D8               	bcf	status,0,c
  3070  0011DC  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3071  0011DE  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3072  0011E0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3073  0011E2  3205               	rrcf	___lldiv@divisor^0,f,c
  3074  0011E4  2E0D               	decfsz	___lldiv@counter^0,f,c
  3075  0011E6  EFD0  F008         	goto	l1521
  3076  0011EA                     l141:
  3077  0011EA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3078  0011EE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3079  0011F2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3080  0011F6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3081  0011FA  0012               	return		;funcret
  3082  0011FC                     __end_of___lldiv:
  3083                           	callstack 0
  3084                           
  3085                           	psect	rparam
  3086  0000                     
  3087                           	psect	idloc
  3088                           
  3089                           ;Config register IDLOC0 @ 0x200000
  3090                           ;	unspecified, using default values
  3091  200000                     	org	2097152
  3092  200000  FF                 	db	255
  3093                           
  3094                           ;Config register IDLOC1 @ 0x200001
  3095                           ;	unspecified, using default values
  3096  200001                     	org	2097153
  3097  200001  FF                 	db	255
  3098                           
  3099                           ;Config register IDLOC2 @ 0x200002
  3100                           ;	unspecified, using default values
  3101  200002                     	org	2097154
  3102  200002  FF                 	db	255
  3103                           
  3104                           ;Config register IDLOC3 @ 0x200003
  3105                           ;	unspecified, using default values
  3106  200003                     	org	2097155
  3107  200003  FF                 	db	255
  3108                           
  3109                           ;Config register IDLOC4 @ 0x200004
  3110                           ;	unspecified, using default values
  3111  200004                     	org	2097156
  3112  200004  FF                 	db	255
  3113                           
  3114                           ;Config register IDLOC5 @ 0x200005
  3115                           ;	unspecified, using default values
  3116  200005                     	org	2097157
  3117  200005  FF                 	db	255
  3118                           
  3119                           ;Config register IDLOC6 @ 0x200006
  3120                           ;	unspecified, using default values
  3121  200006                     	org	2097158
  3122  200006  FF                 	db	255
  3123                           
  3124                           ;Config register IDLOC7 @ 0x200007
  3125                           ;	unspecified, using default values
  3126  200007                     	org	2097159
  3127  200007  FF                 	db	255
  3128                           
  3129                           	psect	config
  3130                           
  3131                           ;Config register CONFIG1L @ 0x300000
  3132                           ;	PLL Prescaler Selection bits
  3133                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  3134                           ;	System Clock Postscaler Selection bits
  3135                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3136                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3137                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  3138  300000                     	org	3145728
  3139  300000  21                 	db	33
  3140                           
  3141                           ;Config register CONFIG1H @ 0x300001
  3142                           ;	Oscillator Selection bits
  3143                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  3144                           ;	Fail-Safe Clock Monitor Enable bit
  3145                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3146                           ;	Internal/External Oscillator Switchover bit
  3147                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3148  300001                     	org	3145729
  3149  300001  0E                 	db	14
  3150                           
  3151                           ;Config register CONFIG2L @ 0x300002
  3152                           ;	Power-up Timer Enable bit
  3153                           ;	PWRT = OFF, PWRT disabled
  3154                           ;	Brown-out Reset Enable bits
  3155                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3156                           ;	Brown-out Reset Voltage bits
  3157                           ;	BORV = 3, Minimum setting 2.05V
  3158                           ;	USB Voltage Regulator Enable bit
  3159                           ;	VREGEN = OFF, USB voltage regulator disabled
  3160  300002                     	org	3145730
  3161  300002  19                 	db	25
  3162                           
  3163                           ;Config register CONFIG2H @ 0x300003
  3164                           ;	Watchdog Timer Enable bit
  3165                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3166                           ;	Watchdog Timer Postscale Select bits
  3167                           ;	WDTPS = 32768, 1:32768
  3168  300003                     	org	3145731
  3169  300003  1E                 	db	30
  3170                           
  3171                           ; Padding undefined space
  3172  300004                     	org	3145732
  3173  300004  FF                 	db	255
  3174                           
  3175                           ;Config register CONFIG3H @ 0x300005
  3176                           ;	CCP2 MUX bit
  3177                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3178                           ;	PORTB A/D Enable bit
  3179                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3180                           ;	Low-Power Timer 1 Oscillator Enable bit
  3181                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3182                           ;	MCLR Pin Enable bit
  3183                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3184  300005                     	org	3145733
  3185  300005  81                 	db	129
  3186                           
  3187                           ;Config register CONFIG4L @ 0x300006
  3188                           ;	Stack Full/Underflow Reset Enable bit
  3189                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3190                           ;	Single-Supply ICSP Enable bit
  3191                           ;	LVP = OFF, Single-Supply ICSP disabled
  3192                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3193                           ;	ICPRT = OFF, ICPORT disabled
  3194                           ;	Extended Instruction Set Enable bit
  3195                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3196                           ;	Background Debugger Enable bit
  3197                           ;	DEBUG = 0x1, unprogrammed default
  3198  300006                     	org	3145734
  3199  300006  81                 	db	129
  3200                           
  3201                           ; Padding undefined space
  3202  300007                     	org	3145735
  3203  300007  FF                 	db	255
  3204                           
  3205                           ;Config register CONFIG5L @ 0x300008
  3206                           ;	Code Protection bit
  3207                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3208                           ;	Code Protection bit
  3209                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3210                           ;	Code Protection bit
  3211                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3212                           ;	Code Protection bit
  3213                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3214  300008                     	org	3145736
  3215  300008  0F                 	db	15
  3216                           
  3217                           ;Config register CONFIG5H @ 0x300009
  3218                           ;	Boot Block Code Protection bit
  3219                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3220                           ;	Data EEPROM Code Protection bit
  3221                           ;	CPD = OFF, Data EEPROM is not code-protected
  3222  300009                     	org	3145737
  3223  300009  C0                 	db	192
  3224                           
  3225                           ;Config register CONFIG6L @ 0x30000A
  3226                           ;	Write Protection bit
  3227                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3228                           ;	Write Protection bit
  3229                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3230                           ;	Write Protection bit
  3231                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3232                           ;	Write Protection bit
  3233                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3234  30000A                     	org	3145738
  3235  30000A  0F                 	db	15
  3236                           
  3237                           ;Config register CONFIG6H @ 0x30000B
  3238                           ;	Configuration Register Write Protection bit
  3239                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3240                           ;	Boot Block Write Protection bit
  3241                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3242                           ;	Data EEPROM Write Protection bit
  3243                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3244  30000B                     	org	3145739
  3245  30000B  E0                 	db	224
  3246                           
  3247                           ;Config register CONFIG7L @ 0x30000C
  3248                           ;	Table Read Protection bit
  3249                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3250                           ;	Table Read Protection bit
  3251                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3252                           ;	Table Read Protection bit
  3253                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3254                           ;	Table Read Protection bit
  3255                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3256  30000C                     	org	3145740
  3257  30000C  0F                 	db	15
  3258                           
  3259                           ;Config register CONFIG7H @ 0x30000D
  3260                           ;	Boot Block Table Read Protection bit
  3261                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3262  30000D                     	org	3145741
  3263  30000D  40                 	db	64
  3264                           tosu	equ	0xFFF
  3265                           tosh	equ	0xFFE
  3266                           tosl	equ	0xFFD
  3267                           stkptr	equ	0xFFC
  3268                           pclatu	equ	0xFFB
  3269                           pclath	equ	0xFFA
  3270                           pcl	equ	0xFF9
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           indf0	equ	0xFEF
  3278                           postinc0	equ	0xFEE
  3279                           postdec0	equ	0xFED
  3280                           preinc0	equ	0xFEC
  3281                           plusw0	equ	0xFEB
  3282                           fsr0h	equ	0xFEA
  3283                           fsr0l	equ	0xFE9
  3284                           wreg	equ	0xFE8
  3285                           indf1	equ	0xFE7
  3286                           postinc1	equ	0xFE6
  3287                           postdec1	equ	0xFE5
  3288                           preinc1	equ	0xFE4
  3289                           plusw1	equ	0xFE3
  3290                           fsr1h	equ	0xFE2
  3291                           fsr1l	equ	0xFE1
  3292                           bsr	equ	0xFE0
  3293                           indf2	equ	0xFDF
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           preinc2	equ	0xFDC
  3297                           plusw2	equ	0xFDB
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        2
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160      8      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_tx(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_tx(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S966_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_tx(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_tx(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> buffer_rx(BANK0[10]), 

    Uart_Read_String@Buf	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_rx(BANK0[10]), 

    Uart_Send_String@info	PTR unsigned char  size(2) Largest target is 10
		 -> buffer_tx(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _Uart_Send_String->_Uart_Send_Char
    _Uart_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7934
                                             91 COMRAM     3     3      0
                          _Uart_Init
                   _Uart_Read_String
                   _Uart_Send_String
                               _atoi
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    5834
                                             85 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _atoi                                                15    13      2    1122
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     2     0      2     143
                                              1 COMRAM     2     0      2
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Read_String                                     9     5      4     332
                                              0 COMRAM     9     5      4
                          _Uart_Read
 ---------------------------------------------------------------------------------
 (2) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             13 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Init
     ___lldiv
   _Uart_Read_String
     _Uart_Read
   _Uart_Send_String
     _Uart_Send_Char
   _atoi
     ___wmul
     _isdigit
     _isspace
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      46       5       43.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      20        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 17:58:45 2021

                       l33 153A                         l42 14BC                         l27 1268  
                       l36 154C                         l45 1512                         l47 1520  
                       l55 12D4                         l48 1532                         l49 1536  
      ___wmul@multiplicand 0003    __size_of_Uart_Send_Char 0016                        l114 1510  
                      l107 0E44                        l108 0E9C                        l141 11EA  
                      l148 11FA                        l552 0DF4                        l562 0FA6  
                      l813 0D1C                        l559 0E14                        l816 0D24  
                      l569 0FC6                        l906 1090                        l914 141E  
                      l819 1456                        l827 13DA                        l923 148C  
                      l917 1550                        l837 1388                        l862 10D8  
                      l872 0840                        l865 111A                        l882 0A08  
                      l874 0848                        l867 1156                        l893 132E  
                      l894 1336                        l887 0B9A                        u601 0D2C  
                      u610 0D50                        u611 0D4C                        u620 0D7A  
                      u540 0FDA                        u700 112A                        u621 0D76  
                      u541 0FD6                        u701 1126                        u630 0DBA  
                      u550 0FEC                        u710 0818                        u631 0DB6  
                      u551 0FE8                        u711 0814                        u640 0F16  
                      u560 1014                        u720 0834                        u800 0B1C  
                      u641 0F12                        u561 1010                        u721 0830  
                      u801 0B18                        u810 1548                        u650 0F40  
                      u570 104A                        u730 097E                        u811 1544  
                      u651 0F3C                        u571 1046                        u731 097A  
                      u820 1520                        u900 1452                        u660 0F6E  
                      u580 141E                        u740 099C                        u821 151C  
                      u661 0F6A                        u581 141A                        u741 0998  
                      u830 152E                        u590 1480                        u670 10A2  
                      u750 09B6                        u910 132E                        u831 152A  
                      u591 147C                        u671 109E                        u751 09B2  
                      u911 132A                        u840 117E                        u680 10C4  
                      u760 09D0                        u841 117A                        u681 10C0  
                      u761 09CC                        u850 11A0                        u930 14BC  
                      u690 111A                        u770 09E0                        u851 119C  
                      u931 14B8                        u691 1116                        u771 09DC  
                      u860 11C8                        u940 12A2                        u780 0A2E  
                      u861 11C4                        u925 1230                        u941 129E  
                      u781 0A2A                        u950 12B8                        u870 13A2  
                      u790 0A76                        u951 12B4                        u871 139E  
                      u791 0A72                        u880 13D0                        u960 0BD2  
                      u881 13CC                        u961 0BCE                        u890 1450  
                      u970 0C06                        u891 144A                        u971 0C02  
                      u980 0C22                        u981 0C1E                        u990 0CD6  
                      u991 0CD0                        _pad 1092                        wreg 000FE8  
              main@dato_rx 005D                       l1401 10C4                       l1331 0FF6  
                     l1411 112A                       l1403 10D0                       l1501 1534  
                     l1333 1014                       l1325 0FC8                       l1341 13E8  
                     l1413 113E                       l1405 10E4                       l1421 081A  
                     l1511 1158                       l1335 104A                       l1327 0FDA  
                     l1343 13FA                       l1351 1468                       l1407 10F8  
                     l1431 0886                       l1423 0834                       l1521 11A0  
                     l1513 1168                       l1505 14EC                       l1601 0BB8  
                     l1361 0D50                       l1329 0FEC                       l1345 13FE  
                     l1353 1480                       l1409 10FC                       l1441 097E  
                     l1433 08FC                       l1425 0870                       l1417 0808  
                     l1531 11E4                       l1523 11AA                       l1515 117E  
                     l1507 1508                       l1611 0C10                       l1603 0BD2  
                     l1371 0DBA                       l1363 0D58                       l1339 13DC  
                     l1347 1458                       l1443 099C                       l1435 0902  
                     l1427 0878                       l1419 0818                       l1525 11C8  
                     l1517 1186                       l1541 13D4                       l1533 138A  
                     l1613 0C26                       l1605 0C06                       l1373 0DDA  
                     l1365 0D6C                       l1357 0D26                       l1381 0F16  
                     l1349 1464                       l1445 09B6                       l1437 0908  
                     l1429 0880                       l1461 0A52                       l1453 0A0A  
                     l1701 0ECC                       l1527 11D8                       l1519 1192  
                     l1535 138E                       l1631 0D00                       l1623 0CA0  
                     l1615 0C2E                       l1607 0C0A                       l1375 0DDC  
                     l1367 0D7A                       l1359 0D32                       l1391 0F8E  
                     l1383 0F1E                       l1447 09D0                       l1439 096C  
                     l1471 0B1C                       l1463 0A76                       l1455 0A2E  
                     l1551 12DE                       l1703 0ED8                       l1529 11DA  
                     l1561 120C                       l1545 1420                       l1537 13A2  
                     l1617 0C36                       l1377 0DEE                       l1369 0D8C  
                     l1393 0FA0                       l1385 0F32                       l1449 09E0  
                     l1481 0B58                       l1473 0B2A                       l1465 0AC0  
                     l1457 0A3C                       l1553 12EC                       l1641 1352  
                     l1705 0EE6                       l1563 120E                       l1571 1492  
                     l1539 13D0                       l1627 0CDC                       l1619 0C68  
                     l1387 0F40                       l1379 0EF8                       l1395 1092  
                     l1475 0B3E                       l1459 0A4E                       l1555 1312  
                     l1643 135A                       l1565 1260                       l1557 11FC  
                     l1581 1278                       l1493 153A                       l1573 14A0  
                     l1629 0CEE                       l1389 0F6E                       l1397 10A2  
                     l1469 0AF8                       l1485 0B64                       l1549 12D6  
                     l1645 1376                       l1637 1338                       l1567 1264  
                     l1559 1200                       l1591 12B8                       l1583 1288  
                     l1495 1548                       l1575 14A4                       l1727 0C52  
                     l1399 10B6                       l1487 0B88                       l1479 0B4A  
                     l1639 134A                       l1671 0E1E                       l1497 1512  
                     l1593 12D4                       l1585 128C                       l1577 126A  
                     l1569 148E                       l1681 0E2C                       l1673 0E20  
                     l1665 0E16                       l1499 152E                       l1579 1272  
                     l1595 0B9C                       l1691 0E7E                       l1683 0E46  
                     l1675 0E22                       l1667 0E1A                       l1589 12A6  
                     l1597 0BB0                       l1685 0E5A                       l1693 0E88  
                     l1677 0E28                       l1669 0E1C                       l1599 0BB4  
                     l1695 0E9E                       l1687 0E6A                       l1679 0E2A  
                     l1697 0EAC                       l1689 0E6E                       l1699 0EB2  
                     ?_pad 0011                       STR_1 0801                       u1000 0CD8  
                     u1010 0CEE                       u1011 0CEA                       u1020 0D00  
                     u1021 0CFC                       u1050 0E9C                       u1051 0E98  
                     u1067 0E74                       u1077 0EA4                       u1087 0EDE  
                     _LATD 000F8C   __end_of_Uart_Read_String 12D6                       _dbuf 0068  
                     _atoi 0B9C                       _main 0E16                       _prec 0064  
                     _nout 0060                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
                     _utoa 0808                       prodh 000FF4                       prodl 000FF3  
                     start 0000               ___param_bank 000000                      ??_pad 0017  
                    ?_atoi 0008                      ?_main 0001            __end_of___lldiv 11FC  
                    ?_utoa 001C            __end_of___lodiv 0E16            __end_of___lomod 0FC8  
                    _RCREG 000FAE                      _RCSTA 000FAB      Uart_Read_String@s_buf 0003  
             vfpfcnvrt@fmt 003E               vfpfcnvrt@llu 0046                      _SPBRG 000FAF  
                    _PORTB 000F81                      _TRISB 000F93                      _TXREG 000FAD  
                    _TXSTA 000FAC                      _flags 0066                      _fputc 0FC8  
                    _fputs 13DC            __end_of_isdigit 1458                      atoi@n 0015  
                    pad@fp 0011                      atoi@s 0008                      _width 0062  
                    _putch 1550            __end_of_isspace 13DC                      tablat 000FF5  
 __end_of_Uart_Send_String 14BE                      utoa@d 001E                      utoa@i 003A  
                    utoa@n 0032                      utoa@p 002E                      utoa@w 0030  
                    status 000FD8            __end_of_sprintf 138A           ___lodiv@dividend 0001  
          __initialization 14BE               __end_of_atoi 0D26               __end_of_main 0EF8  
             __end_of_utoa 0A0A                     ??_atoi 000A                     ??_main 005C  
                   ??_utoa 0026              __activetblptr 000002           ___lodiv@quotient 0011  
                   ?_fputc 0001                     ?_fputs 000A                     ?_putch 0001  
                   _SPBRGH 000FB0               vfprintf@cfmt 0054                     ___wmul 14EC  
                ??___lldiv 0009                  ??___lodiv 0011                  ??___lomod 0011  
                   clear_0 14DC                     isa$std 000001             _Uart_Send_Char 1538  
                   pad@buf 0013         __size_of_Uart_Init 006E         __size_of_Uart_Read 0026  
                   _strlen 1458                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isdigit 0003  
             __mediumconst 0000                  ??_isspace 0003                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                     putch@c 0001  
         __end_of_vfprintf 1338                     utoa@fp 001C                  ??_sprintf 005C  
               __accesstop 0060    __end_of__initialization 14E2              ___rparam_used 000001  
           __pcstackCOMRAM 0001        Uart_Read_String@Buf 0001               __pidataBANK0 154E  
   __end_of_Uart_Send_Char 154E              __end_of_fputc 1092              __end_of_fputs 1420  
            __end_of_putch 1552                    ??_fputc 0005                    ??_fputs 000E  
                  ??_putch 0001                 __pbssBANK0 0060          ?_Uart_Read_String 0001  
        __end_of_Uart_Init 126A          __end_of_Uart_Read 1538         ??_Uart_Read_String 0005  
                  ?___wmul 0001            ?_Uart_Send_Char 0001                    _BAUDCON 000FB8  
                  ?_strlen 0001         __size_of_vfpfcnvrt 0192                Uart_Init@vx 0016  
         ___lomod@dividend 0001          ?_Uart_Send_String 0002       Uart_Send_Char@txData 0001  
       ??_Uart_Send_String 0004                    __Hparam 0000                    __Lparam 0000  
                  ___lldiv 1158            __size_of___wmul 0026                    ___lodiv 0D26  
                  ___lomod 0EF8                  ?_vfprintf 004E               __psmallconst 0800  
                  __pcinit 14BE                    __ramtop 0800                    __ptext0 0E16  
                  __ptext1 1338                    __ptext2 12D6                    __ptext3 0A0A  
                  __ptext4 0808                    __ptext5 1092                    __ptext6 1458  
                  __ptext7 13DC                    __ptext8 0FC8                    __ptext9 1550  
          __size_of_strlen 0036               __size_of_pad 00C6                    _isdigit 1420  
                  _isspace 138A                    atoi@neg 000E                    _sprintf 1338  
     end_of_initialization 14E2                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C            ___lldiv@divisor 0005              Uart_Init@baud 000E  
          ___lldiv@counter 000D          __end_of_vfpfcnvrt 0B9C                  _RCSTAbits 000FAB  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 0054                    strlen@a 0003  
                  strlen@s 0001                  _TRISCbits 000F94                  _TRISDbits 000F95  
                _TXSTAbits 000FAC                 main@v_dato 005E                vfpfcnvrt@ap 0040  
              vfpfcnvrt@fp 003C             __end_of___wmul 1512                _BAUDCONbits 000FB8  
           __end_of_strlen 148E        start_initialization 14BE            ___lodiv@divisor 0009  
          ___lodiv@counter 0019          Uart_Read_String@c 0007                __end_of_pad 1158  
         ??_Uart_Send_Char 0001                  _Uart_Init 11FC                  _Uart_Read 1512  
              vfprintf@fmt 0050                   ??___wmul 0005                __pdataBANK0 00A4  
__size_of_Uart_Read_String 006C                   ??_strlen 0003              __pcstackBANK0 009C  
               ?_Uart_Init 000E                 ?_Uart_Read 0001                   ?___lldiv 0001  
                 ?___lodiv 0001                   ?___lomod 0001                  _buffer_rx 0092  
                _buffer_tx 0088  __size_of_Uart_Send_String 0030          __size_of_vfprintf 0062  
          ___lomod@divisor 0009                __smallconst 0800            ___lomod@counter 0011  
                 ?_isdigit 0001                   ?_isspace 0001                   ?_sprintf 0056  
           __size_of_fputc 00CA             __size_of_fputs 0044             __size_of_putch 0002  
           ___wmul@product 0005                   _LATCbits 000F8B   Uart_Read_String@cont_buf 0008  
                 _PIR1bits 000F9E                  _vfpfcnvrt 0A0A                 _ADCON1bits 000FC1  
        ___wmul@multiplier 0001                   __Hrparam 0000                ??_Uart_Init 0012  
              ??_Uart_Read 0001                 vfprintf@ap 0052                   __Lrparam 0000  
               vfprintf@fp 004E           _Uart_Read_String 126A           __size_of___lldiv 00A4  
         __size_of___lodiv 00F0           __size_of___lomod 00D0                 ?_vfpfcnvrt 003C  
               sprintf@fmt 0058                   _atoi$944 0010                   _atoi$945 0014  
                 _atoi$946 0012           __size_of_isdigit 0038                   _bit_flag 00A4  
         __size_of_isspace 0052                   __ptext10 0EF8                   __ptext11 0D26  
                 __ptext20 11FC                   __ptext12 0B9C                   __ptext21 1158  
                 __ptext13 138A                   __ptext14 1420                   __ptext15 14EC  
                 __ptext16 148E                   __ptext17 1538                   __ptext18 126A  
                 __ptext19 1512           __size_of_sprintf 0052       Uart_Send_String@info 0002  
            __size_of_atoi 018A              __size_of_main 00E2              __size_of_utoa 0202  
                 isa$xinst 000000                   _vfprintf 12D6           _Uart_Send_String 148E  
              _isspace$962 0007                   isdigit@c 0001                  sprintf@ap 009C  
                 isspace@c 0001           ___lldiv@dividend 0001                ??_vfpfcnvrt 0042  
                 sprintf@f 009E                   sprintf@s 0056           ___lldiv@quotient 0009  
